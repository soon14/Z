
<template>
	<!--新建销售发货订单-->
	<div class="add-box">
		<!--固定导航-->
		<div class="head">
			<!-- <Col span='6'> -->
				<div class="left-top">
					<p class="wldw">
						<span style='margin-left:5px'>
								<Checkbox v-model='single' @on-change='checkAll'></Checkbox>
							</span>
						<span style="width:42px;font-weight:900">筛选：</span>
						 <Select style="width:100px" v-model="valueT"  placeholder="全部"  @on-change="orderselected">
					        <Option v-for="item in orderListname" :value="item.value" :key="item.value">{{ item.label }}</Option>
					    </Select>
					</p>
					<div>
						<!--新建-->
						<span class="top-left-btn"  @click="addUnit">
							<Icon type="plus" style="position:absolute;top:7px;left:8px"></Icon></span>

					</div>
				</div>
			<!-- </Col> -->
			<!-- <Col span='18'> -->
				<div class="right-top">

				<div >
					<span style="margin-left:20px;font-size:19px;font-weight:900;position: absolute;left: 360px;">{{addtx}}</span>

				</div>
				<div style="position: absolute;right: 110px;">
					<div v-if="addText" style='position:relative'>
						<div style='width:140px;text-align: center;margin-right: 5px;;left:-120px;display:inline-block;position:absolute;top:14px;height:35px;line-height:35px;overflow:hidden;z-index-1' >
			                  <el-upload
			                    class="upload-demo"
			                    :action="actionUrl"
			                    :on-success='success'
			                    :before-upload="beforeAvatarUpload"
			                     :on-progress='upProgress'
			                    multiple
			                    :show-file-list='false'
			                    >
			                    <Button shape="circle" type="primary" style="background:#3b77e3;border:none:color:#fff"> <span style='color:#fff'>上传附件</span></Button>
			                  </el-upload>
			                </div>
						<Button shape="circle"  style="background:#3b77e3;margin-right:5px;color:#fff;border:none" @click="saveCgInfo('xiaoshousave')" >
						<Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>保存</Button>

						<Button shape="circle"  @click="showDetail"  style="background:#999999;color:#fff;margin-right:10px;" ><Icon type="close" style="margin-right:5px;"></Icon>取消</Button>

						<span @click="cancelHome" style="cursor:pointer"><Icon type="close" class="cha" style='margin-left:5px'></Icon></span>
					</div>

					<div v-if="!addText" class="changebutton" style='position:relative'>

						<div style='width:140px;text-align: center;;left:-120px;display:inline-block;position:absolute;top:14px;height:35px;line-height:35px;overflow:hidden;z-index-1' v-if='fileBtn'>
			                  <el-upload
			                    class="upload-demo"
			                    :action="actionUrl"
			                    :on-success='success'
			                    :before-upload="beforeAvatarUpload"
			                     :on-progress='upProgress'
			                    multiple
			                    :show-file-list='false'
			                    >
			                    <Button shape="circle" type="primary" style="background:#3b77e3;border:none:color:#fff"> <span style='color:#fff'>上传附件</span></Button>
			                  </el-upload>
			                </div>
			            <Button type="ghost"  shape="circle"  @click="examine" v-if='sh' style="background:#3b77e3;color:#fff;border:none">
							<Icon type="checkmark-round" style="position:relative;right:5px"></Icon>
						审核
						</Button>
						<Button type="ghost"  shape="circle"  @click="xiugaiedit" v-if="xiugaishow" style="background:#40ca98;color:#fff;border:none">
							<i class="el-icon-edit" style=";margin-right:5px;"></i>
						修改
						</Button>

						
						<Button type="ghost"  shape="circle"  @click="package" v-if='packageshow' style="background:#3b77e3;color:#fff;border:none">
							<Icon type="checkmark-round" style="position:relative;right:5px"></Icon>

						打包
						</Button>
						<Button type="ghost"  shape="circle"  @click="shipment" v-if='shipmentshow' style="background:#3b77e3;color:#fff;border:none">
							<Icon type="checkmark-round" style="position:relative;right:5px"></Icon>

						装载
						</Button>

						<Button type="ghost"  shape="circle"  @click="delivery" v-if='deliveryshow' style="background:#3b77e3;color:#fff;border:none">
							<Icon type="checkmark-round" style="position:relative;right:5px"></Icon>
						物流登记
						</Button>
						<Button type="ghost"  shape="circle"  @click="allsign" v-if='wc' style="background:#3b77e3;color:#fff;border:none">
							<Icon type="checkmark-round" style="position:relative;right:5px"></Icon>
						发货完成
						</Button>
						<Button type="ghost"  shape="circle"  @click="cancelOrder" v-if='qs' style="background:#d53c39;color:#fff;border:none">
							<Icon type="android-cancel" style="position:relative;right:5px"></Icon>
						弃审
						</Button>
						<Button type="ghost"  shape="circle"  @click="invalid" v-if='zf' style="background:#d53c39;color:#fff;border:none">
							<Icon type="close" style="position:relative;right:5px"></Icon>

						作废
						</Button>
						<Button type="ghost"  shape="circle" @click="saveEdit" v-if="editshow" style="background:#3b77e3;color:#fff;border:none">
							<Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>保存
						</Button>
						<Button shape="circle" v-if="editshow" ref='editquxiao'  @click="showDetail"  style="background:#999999;color:#fff;" ><Icon type="close" style="margin-right:5px;"></Icon>取消</Button>
						<Dropdown trigger="click" v-if='cancelxiu'>
				        <Button shape="circle" type="ghost" style="background:#ff7d16;color:#fff;border:none">更多
		        				<span><i class="ivu-icon ivu-icon-chevron-down"></i></span>
		        			</Button>

					        <DropdownMenu slot="list">
					        	<span  @click="storeImport" ><DropdownItem >导入</DropdownItem></span>
					      		<span  @click="printOrder" ><DropdownItem >打印</DropdownItem></span>
								<span  @click="exportOrder" ><DropdownItem >导出</DropdownItem></span>
					            <span @click="delcg" v-if="isdel"><DropdownItem >删除</DropdownItem></span>

					        </DropdownMenu>
				    	</Dropdown>

						<span @click="cancelHome" style="cursor:pointer"><Icon type="close" class="cha" ></Icon></span>
						</div>

						</div>
					</div>
			<!-- </Col> -->
		</div>

		<!--左边内容-->
		<div style='height:60px'></div>
	<div class="left-content">
		<div class='locationSearch'>
			<Input style='padding:10px 20px;' v-model='searchKeyword' :placeholder="$t('public.orderornameandphone')" @on-enter='enterSearchdd'>
            <span slot="append"  @click='searchdd' style='cursor:pointer;'>搜索</span>
            </Input>
             <!-- <a style='font-size:14px;font-weight:600;margin-left:20px;border-bottom:1px solid #3b77e3;height:35px;line-hegiht:35px;line-height: 35px;margin-top: -2px;' @click='searchLocation'>精准搜索</a> -->
		</div>
		<p v-if="Allpo.length==0" class='scrollFix'>
			<Spin>
                <!-- <Icon type="load-c" size=18 class="demo-spin-icon-load"></Icon> -->
                <div>暂无数据</div>
            </Spin>
	    </p>
		<Scroll :on-reach-bottom="handleReachEdge" :height="height" v-else>
			<div class="con-list" v-for="(item,index) in Allpo" :key='index' @click="getcginfo(item.id,index,item)" :class="{bg:numIndex==index}">
				 <span style="margin-right: 10px;">
				 	 <!-- <Checkbox :value="numIndex==index"></Checkbox> -->
				 	 <Checkbox :value="item.check" @on-change='changeOnRowOrder(item,index,$event)'></Checkbox>
				 </span>
				 <div>

				<p class="list-title">
					<span>{{item.recordNo}}</span>

					<span class='file' >
						<Tooltip content="有附件" placement="right-start">
				            <img src="http://img.zsydian.com/icon/gys_file.png" width='10' height='10' v-if='item.attachs' >
				        </Tooltip>
					</span>
				</p>
				<p class="txt">{{item.partnerName}}</p>
				<!-- <span class="status"
				:class="{textbg1:item.ststusDesc=='未审核',textbg2:item.ststusDesc=='已作废',textbg3:item.ststusDesc=='待审核',textbg4:item.ststusDesc=='已完成',textbg5:item.ststusDesc=='已审核'}">{{item.ststusDesc}}</span> -->

				<div class="lanrenLeft" :class="{bgd6:item.ststusDesc=='未审核',bgd7:item.ststusDesc=='已作废',bgd8:item.ststusDesc=='待审核',bgd9:item.ststusDesc=='已完成',bgd10:item.ststusDesc=='已审核',bgd11:item.ststusDesc=='打包中',bgd12:item.ststusDesc=='已提交',bgd13:item.ststusDesc=='待提交'}">

                   <span >{{item.ststusDesc}}</span>
                </div>​

				<span class="date">  <span>{{item.recordDate}} - {{item.deliveryDate}}</span></span>
				<span class="date2">  <span>{{item.deliverName}}</span></span>

				</div>
			</div>

		</Scroll>
	</div>


	<!--右边保存与详情明细-->
	<div class="add-right">
		<div class="right-content right-detail" ref="divsave">
			<!--销售保存-->
			<div v-if="addText" style='margin-bottom:320px;width:100%'>
			<Form ref="xiaoshousave" :model="xiaoshouformValidate" :rules="xiaoshouruleValidate" :label-width="80" >

				<Row >
					<Col span="8" >
						<FormItem label="客户" prop="partnerName">
                        	<div style='position:relative;'>
	                        		<Input  v-model="xiaoshouformValidate.partnerName" placeholder="请选择客户" @on-keyup="changeInput"></Input>
	                        		<span @click="alertchModal" >
	                        			<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer'></Icon>
	                        		</span>
	                        		<div style="position:absolute;z-index:999;width:100%">
	                        			<Table v-if="alertch1" border highlight-row height="300" :columns="gyskey" :data="gysdata" 
												@on-row-click="gysrow1" @on-row-dblclick="dblgysrow">
										</Table>
	                        		</div>
	                        	</div>
                   		</FormItem>
                   </Col>
                   <Col span="8" >
                   		<FormItem label="销售类型" prop="salesType">
                        	<Select @on-change="getcgType" label-in-value v-model='xiaoshouformValidate.salesType'>
								<Option v-for="(item,index) in datacgList" :value='item.value' :key='item.value'>{{item.label}}</Option>
							</Select>
                   		</FormItem>
                   	</Col>
                   	 <Col span="8" >
                   		<FormItem label="支付方式" prop="modeldztype">
                        	<Select v-model="xiaoshouformValidate.modeldztype" @on-change="getdztype">
							<Option v-for="item in dztype" :value="item.key" :key="item.key">{{item.title}}</Option>
							</Select>
                   		</FormItem>
                   	</Col>
                   </Row>
                <Row>
                   	<Col span="8">
                   		<FormItem label="仓库" prop="warehouseName">
                        	<div style="position:relative">
                        		<Input v-model="xiaoshouformValidate.warehouseName" :placeholder="$t('purchase.purchaseOrder.ck')" @on-keyup="cahngeWareHouse"></Input>
								<span @click="warehouseModal" >
		                        	<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer'></Icon>
		                        </span>
		                        <div style="position:absolute;width:100%;z-index:999">
		                        	<Table v-if="warehouseshow1" border height='300' highlight-row  :columns="ckkey" :data="allwarehouse" 
									@on-row-click="ckrow1" @on-row-dblclick="dblckrow">
									</Table>
		                        </div>
                        	</div>
							
                   		</FormItem>
                   	</Col>
                   	<Col span="8" >
                   		<FormItem label="单据日期" prop="recordDate">
                        	<DatePicker type="date" :value='xiaoshouformValidate.recordDate' placeholder="请选择时间" style="width:100%" @on-change="shdate1"></DatePicker>
                   		</FormItem>
                   	</Col>
                   	<Col span="8" >
                   		<FormItem label="到货日期">
                        	<DatePicker type="date" :options="optionsB" :value='deliveryDate' placeholder="请选择时间" style="width:100%" @on-change="shdate"></DatePicker>
                   		</FormItem>
					</Col>
				</Row>
				<Row  style='margin-top: 10px;'>
					<Col span="8">
						<FormItem label="收货人" prop="deliverName">
							<div  style='position:relative;'>
								
									<Input  v-model="xiaoshouformValidate.deliverName" placeholder="请选择收货人" ></Input>
								<span @click="alertdeliverName">
	                        			<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer' ></Icon>
	                        	</span>
	                        		<!--@on-keyup="changeDliver" <div stle="position:absolute;width:100%;z-index:999">
	                        			<Table v-if="alertshr1" border highlight-row height="300" :columns="shrkey" :data="shrdata" 
											@on-row-click="shrrow1" @on-row-dblclick="dblshrrow">
											</Table>
	                        		</div> -->
	                        	</div>
	                    </FormItem>
	                </Col>
	                <Col span="8">
	                    <FormItem label="收货方手机" prop="deliverMobile">
							<Input v-model="xiaoshouformValidate.deliverMobile" placeholder="收货方手机"></Input>
	                    </FormItem>
	                </Col>
	               	<Col span="8">
	                    <FormItem label="收货方电话" prop="deliverTel">
							<Input v-model="xiaoshouformValidate.deliverTel" placeholder="收货方电话"></Input>
	                    </FormItem>
	                </Col>
	                <Col span="16">
	                     <FormItem label="收货方地址" >
							<div style='display:flex'>
           						<el-cascader
								   filterable
								    expand-trigger="click"
								    :options="cityInfo"
								    v-model="selectedOptions2"
								    @change="handleChange" style="width:400px">
							  	</el-cascader>
							  	<Input type="text" v-model="deliverAddress" placeholder="请输入详细地址"></Input>
           					</div>
	                    </FormItem>
					</Col>
				</Row>
			</Form>
			<!--选择商品表格-->
			<div class="table" style='margin:0 10px'>
				<Table size="small" :highlight-row="true" border :columns="cunhuo" :data="cunhuodata" ></Table>
			</div>

			<div style='margin:10px'>
				<div style='margin:10px 0'><span>备注：</span></div>
				<Input v-model="remark" style="width:100%" type="textarea" placeholder="备注信息 :" class="getaddress" :min-row="6"></Input>
			</div>
			<div  v-if='soe'>
	            <Spin>
	                <Icon type="load-c" size=18 class="demo-spin-icon-load"></Icon>
	                <div>文件正在上传....</div>
	            </Spin>
	        </div>
			<div style='margin:10px'>
				<div style='margin:10px 0'>多附件列表：</div>
				<div class='upDataList'>
		        	<li v-for='(item,index) in upData' @mouseover='chaOver(item,index)' @mouseleave='chleave(item,index)'>
		        		<img :src="item.url" width='80' height='80'>
		        		<span>{{item.fileName}}</span>
		        		<span v-if='chaIndex==index' @click='delUp(item,index)' ><Icon type="close" class="upcha" ></Icon></span>
		        	</li>
	        	</div>
	        </div>


		</div>
	</div>
	<div class="right-content right-detail" ref="edit">
		<!--修改-->
		<div v-if="!addText" >
			<Form ref="xiaoshousave1" :model="xiaoshouformValidate" :rules="xiaoshouruleValidate" :label-width="80" >

				<Row>
					<Col span="8" >
						<FormItem label="客户" prop="partnerName">
                        	<div style='position:relative;'>
	                        		<Input  v-model="xiaoshouformValidate.partnerName" placeholder="请选择客户" @on-keyup="changeInput"></Input>
	                        		<span @click="alertchModal" >
	                        			<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer'></Icon>
	                        		</span>
	                        		<div style="position:absolute;z-index:999;width:100%">
	                        			<Table v-if="alertch1" border highlight-row height="300" :columns="gyskey" :data="gysdata" 
												@on-row-click="gysrow1" @on-row-dblclick="dblgysrow">
										</Table>
	                        		</div>
	                        	</div>
                   		</FormItem>
                   </Col>
                   <Col span="8" >
                   		<FormItem label="销售类型" prop="salesType">
                        	<Select @on-change="getcgType" label-in-value v-model='xiaoshouformValidate.salesType'>
								<Option v-for="(item,index) in datacgList" :value='item.value' :key='item.value'>{{item.label}}</Option>
							</Select>
                   		</FormItem>
                   	</Col>
                   	 <Col span="8" >
                   		<FormItem label="支付方式" prop="modeldztype">
                        	<Select v-model="xiaoshouformValidate.modeldztype" @on-change="getdztype">
							<Option v-for="item in dztype" :value="item.key" :key="item.key">{{item.title}}</Option>
							</Select>
                   		</FormItem>
                   	</Col>
                   	<Col span="8">
                   		<FormItem label="仓库" prop="warehouseName">
                        	<div style="position:relative">
                        		<Input v-model="xiaoshouformValidate.warehouseName" :placeholder="$t('purchase.purchaseOrder.ck')" @on-keyup="cahngeWareHouse"></Input>
								<span @click="warehouseModal" >
		                        	<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer'></Icon>
		                        </span>
		                        <div style="position:absolute;width:100%;z-index:999">
		                        	<Table v-if="warehouseshow1" border height='300' highlight-row  :columns="ckkey" :data="allwarehouse" 
									@on-row-click="ckrow1" @on-row-dblclick="dblckrow">
									</Table>
		                        </div>
                        	</div>
							
                   		</FormItem>
                   	</Col>
                   	<Col span="8" >
                   		<FormItem label="单据日期" prop="recordDate">
                        	<DatePicker type="date" :value='xiaoshouformValidate.recordDate' placeholder="请选择时间" style="width:100%" @on-change="shdate1"></DatePicker>
                   		</FormItem>
                   	</Col>
                   	<Col span="8" >
                   		<FormItem label="到货日期">
                        	<DatePicker type="date" :options="optionsB" :value='deliveryDate' placeholder="请选择时间" style="width:100%" @on-change="shdate"></DatePicker>
                   		</FormItem>
					</Col>
				</Row>
				<Row  style='margin-top: 10px;'>
					<Col span="8">
						<FormItem label="收货人" prop="deliverName">
							<div  style='position:relative;'>
								
									<Input  v-model="xiaoshouformValidate.deliverName" placeholder="请选择收货人" ></Input>
									<span @click="alertdeliverName">
	                        			<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer' ></Icon>
	                        		</span>
	                        		<!--@on-keyup="changeDliver" <div stle="position:absolute;width:100%;z-index:999">
	                        			<Table v-if="alertshr1" border highlight-row height="300" :columns="shrkey" :data="shrdata" 
											@on-row-click="shrrow1" @on-row-dblclick="dblshrrow">
											</Table>
	                        		</div> -->
	                        	</div>
	                    </FormItem>
	                </Col>
	                <Col span="8">
	                    <FormItem label="收货方手机" prop="deliverMobile">
							<Input v-model="xiaoshouformValidate.deliverMobile" placeholder="收货方手机"></Input>
	                    </FormItem>
	                </Col>
	               	<Col span="8">
	                    <FormItem label="收货方电话" prop="deliverTel">
							<Input v-model="xiaoshouformValidate.deliverTel" placeholder="收货方电话"></Input>
	                    </FormItem>
	                </Col>
	                <Col span="16">
	                     <FormItem label="收货方地址" >
							<div style='display:flex'>
           						<el-cascader
								   filterable
								    expand-trigger="click"
								    :options="cityInfo"
								    v-model="selectedOptions2"
								    @change="handleChange" style="width:400px">
							  	</el-cascader>
							  	<Input type="text" v-model="deliverAddress" placeholder="请输入详细地址"></Input>
           					</div>
	                    </FormItem>
					</Col>
				</Row>
			</Form>
			<Table size="small" :highlight-row="true" border :columns="cunhuoE" :data="soDetailList" ></Table>
			<div style='margin:10px'>
					<!-- <div style='margin:10px 0;width:92%'><span>备注：</span></div> -->
					<Input v-model="remark" style="width:100%" type="textarea" placeholder="备注信息 :" class="getaddress" :min-row="6"></Input>
				</div>
			<div  v-if='soe'>
                <Spin>
	                <Icon type="load-c" size=18 class="demo-spin-icon-load"></Icon>
	                <div>文件正在上传....</div>
	            </Spin>
            </div>
			<div style='margin:10px'>
				<div style='margin:10px 0'>多附件列表：</div>
				<div class='upDataList'>
		        	<li v-for='(item,index) in upData' @mouseover='chaOver(item,index)' @mouseleave='chleave(item,index)'>
		        		<img :src="item.url" width='80' height='80'>
		        		<span>{{item.fileName}}</span>
		        		<span v-if='chaIndex==index' @click='delUp(item,index)' ><Icon type="close" class="upcha" ></Icon></span>
		        	</li>
	        	</div>
	        </div>

		</div>
	</div>
	<!--详情明细订单页面-->
	<div class="right-content right-detail" ref="detail">
			<el-steps :active="activeSend" finish-status="success" :align-center='true' style='margin-left:80px;' v-if='activeIsShow'>
				<el-step title="审核"></el-step>
				<el-step title="打包"></el-step>
				<el-step title="装载"></el-step>
				<el-step title="物流" ></el-step>
				<el-step title="发货"></el-step>
				<el-step title="完成"></el-step>
			</el-steps>
			<!--订单详情页面cgxqInfo-->
			<Form  :model="xiaoshouformValidate"  :label-width="80" >

				<Row >
					<Col span="8" style='margin-top:10px;'>
						<FormItem label="客户" prop="partnerName">
                        	<div @click="alertchModal" style='position:relative;'>
                        		<Input disabled v-model="xiaoshouformValidate.partnerName" placeholder="请选择客户" ></Input>
                        		<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px'></Icon>
                        	</div>
                   		</FormItem>
                   </Col>
                   <Col span="8" style='margin-top:10px;'>
                   		<FormItem label="销售类型" prop="salesType">
                        	<Select disabled label-in-value v-model='xiaoshouformValidate.salesType'>
								<Option v-for="(item,index) in datacgList" :value='item.value' :key='item.value'>{{item.label}}</Option>
							</Select>
                   		</FormItem>
                   	</Col>
                   	 <Col span="8" style='margin-top:10px;'>
                   		<FormItem label="支付方式" prop="modeldztype">
                        	<Select v-model="xiaoshouformValidate.modeldztype" disabled>
							<Option v-for="item in dztype" :value="item.key" :key="item.key">{{item.title}}</Option>
							</Select>
                   		</FormItem>
                   	</Col>
                   	<Col span="8">
                   		<FormItem label="仓库" prop="warehouseName">
                        	<div style="position:relative">
                        		<Input disabled v-model="xiaoshouformValidate.warehouseName" :placeholder="$t('purchase.purchaseOrder.ck')" @on-keyup="cahngeWareHouse"></Input>
								<span  >
		                        	<Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer'></Icon>
		                        </span>
		                        
                        	</div>
							
                   		</FormItem>
                   	</Col>
                   	<Col span="8" >
                   		<FormItem label="单据日期" prop="recordDate">
                        	<DatePicker type="date" :value='xiaoshouformValidate.recordDate' placeholder="请选择时间" style="width:100%" disabled></DatePicker>
                   		</FormItem>
                   	</Col>
                   	<Col span="8" >
                   		<FormItem label="到货日期">
                        	<DatePicker type="date" :value='deliveryDate' placeholder="请选择时间" style="width:100%" disabled></DatePicker>
                   		</FormItem>
					</Col>
				</Row>
				<Row  style='margin-top: 10px;'>
					<Col span="8">
						<FormItem label="收货人" prop="deliverName">
							<div  style='position:relative;'>
                        		<Input disabled v-model="xiaoshouformValidate.deliverName" placeholder="请选择收货人" ></Input>
                        		<span ><Icon type="ios-search" size="16" style='position:absolute;top:8px;right:8px;cursor:pointer' ></Icon></span>
                        	</div>
	                    </FormItem>
	                </Col>
	                <Col span="8">
	                    <FormItem label="收货方手机" prop="deliverMobile">
							<Input disabled v-model="xiaoshouformValidate.deliverMobile" placeholder="收货方手机"></Input>
	                    </FormItem>
	                </Col>
	               	<Col span="8">
	                    <FormItem label="收货方电话" prop="deliverTel">
							<Input disabled v-model="xiaoshouformValidate.deliverTel" placeholder="收货方电话"></Input>
	                    </FormItem>
	                </Col>
	                <Col span="16">
	                     <FormItem label="收货方地址" >
							<div style='display:flex'>
           						<el-cascader
								    expand-trigger="click"
								    :options="cityInfo"
								    v-model="selectedOptions2"
								    disabled style="width:400px">
							  	</el-cascader>
							  	<Input disabled type="text" v-model="deliverAddress" placeholder="请输入详细地址"></Input>
           					</div>
	                    </FormItem>
					</Col>
					<Col span="8" v-if="logistics">
						<Col span="8">
		                     <FormItem label="物流公司" >
								<span>{{logistics}}</span>
		                    </FormItem>
						</Col>
						<Col span="16">
		                     <FormItem label="物流编号" >
								<span>{{logisticsNo}}</span>
		                    </FormItem>
						</Col>
					</Col>
				</Row>
			</Form>
			<div class="detail-bottom">
				<div class="detail-title-mark">
					<div v-for="(item,index) in titles" class="detail-title" @click="addborder(index)" :class="{bor:index==num2}">
						{{item}}
					</div>
				</div>
				<!--出库明细-->
				<div v-if="num2==0" class="detail-public" >
					<Table size="small" border   :columns="cgListInfoKey" :data="cgListInfo"></Table>
					<div style='margin-top:10px;margin-bottom:90px'>
					<Page v-if='cktotal1!=0' :total="cktotal1" show-total size="small" :pageSize='ckpageSize1'  @on-change="ckgetData1" @on-page-size-change="ckchangePageSize1"></Page>
					</div>
				</div>
				<!--分配明细-->
				<div v-if="num2==1" class="detail-public" >
					<Table size="small" border :columns="fpListInfoKey" :data="fpListInfo"></Table>
					<div style='margin-top:10px;margin-bottom:90px'>
					 <Page v-if='fptotal1!=0' :total="fptotal1" show-total size="small" :pageSize='fppageSize1'  @on-change="fpgetData1" @on-page-size-change="fpchangePageSize1"></Page>
					</div>
				</div>
			</div>
				<!--日志-->
				<div v-if="num2==2" class="detail-public">
					<div  style='margin-bottom:300px'>

						 <Timeline v-if='chreceipt.length!=0' style="height:300px;overflow:auto">
					        <TimelineItem v-for='(item,index) in chreceipt' :key='index' >
					            <span class="TimelineItemtime">{{item.createTime}}</span>
					            <span class="operator" v-if="item.referNo">来源编号 ({{item.referNo }})</span>
					            <span class="operator">单号 ({{item.recordNo}})</span>
								<span class="operator" style="color:#ff0000">{{item.title}}</span>
								<span class="operator" v-if="item.remark">备注：{{item.remark}}</span>
					        </TimelineItem>
					    </Timeline>
					    <span v-else>{{$t('public.NoData')}}</span><!--暂无数据-->
					</div>
				</div>
			    <div v-if="num2==3" class="detail-public">
					<div  style='margin-bottom:300px'>
						<div>
                    		<div  v-if='soe'>
				                <Spin>
					                <Icon type="load-c" size=18 class="demo-spin-icon-load"></Icon>
					                <div>文件正在上传....</div>
					            </Spin>
					        </div>
					        <div v-if='upData1==null'>
					        	<span>暂无附件</span>
					        </div>
							<div class='upDataList' v-else>
					        	<li v-for='(item,index) in upData1'>
					        		<img :src="item.url" width='80' height='80'>
					        		<span>{{item.fileName}}</span>
					        		<span v-if='chaIndex==index' ><Icon type="close" class="upcha" ></Icon></span>
					        	</li>
					        </div>
                		</div>
					</div>
				</div>

	</div>
	</div>
	<!--选择供应商弹出框-->
	<Modal v-model="alertch" width="660px">
		<p slot="header" style="height:30px;line-height:30px">

			<span>客户搜索</span>
		</p>
		<div style="position:relative;text-align:center;width:100%;height:35px;line-height:35px;display:flex;">
			<Input v-model="gyskeyword"  placeholder="客户编码/客户名称" style="padding:2px 0" @on-enter='searkh'></Input>
			<span @click="getgysKeyword">
			<Icon type="search" size="16" style="display:inline-block;position:absolute;top:10px;right:18px;z-index:9" ></Icon>

			</span>
		</div>
		<div slot="footer"  style='margin-top:-10px'>
			<!--客户表格-->
			<Table  border highlight-row height="300" :columns="gyskey" :data="gysdata" 
			@on-row-click="gysrow" @on-row-dblclick="dblgysrow">
			</Table>
			<!--分页-->
            <div class="page-box" style="text-align:left">
			 <Page :total="unittotal" :pageSize='unitpageSize' show-total @on-change="getunitData" @on-page-size-change="changeunitPageSize"></Page>
			</div>
			<div class='title'  style='margin:0px'>
				<div style='color:#D15151;font-size:14px'>
					<!-- <Icon type="plus" style='margin-right:5px'></Icon>
					<span >添加往来单位</span> -->
				</div>
				<div>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#ACACAC;border:none;color:#fff" @click='modelCancel'><Icon type="close" style="margin-right:5px;" ></Icon>取消</Button>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#3b77e3;color:#fff" @click="makegys"><Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>确认</Button>
				</div>
			</div>
		</div>
	</Modal>
	<!--收货人-->
	<Modal v-model="alertshr" width="660px">
		<p slot="header" style="height:30px;line-height:30px">

			<span>收货人</span>
		</p>
		<div style="position:relative;text-align:center;width:100%;height:35px;line-height:35px;display:flex;">
			<!-- <Input v-model="gyskeyword"  placeholder="收货人编码/收货人名称" style="padding:2px 0" @on-enter='searkh'></Input>
			<span @click="getgysKeyword">
			<Icon type="search" size="16" style="display:inline-block;position:absolute;top:10px;right:18px;z-index:9" ></Icon> -->

			<!-- </span> -->
		</div>
		<div slot="footer"  style='margin-top:-10px'>
			<!--收货人表格-->
			<Table  border highlight-row height="300" :columns="shrkey" :data="shrdata" 
			@on-row-click="shrrow"  @on-row-dblclick="dblshrrow">
			</Table>
			<!--分页-->
            <div class="page-box" style="text-align:left">
			 <Page :total="shrtotal" :pageSize='shrpageSize' show-total @on-change="getshrData" @on-page-size-change="changeshrPageSize"></Page>
			</div>
			<div class='title'  style='margin:0px'>
				<div style='color:#D15151;font-size:14px'>
					<!-- <Icon type="plus" style='margin-right:5px'></Icon>
					<span >添加往来单位</span> -->
				</div>
				<div>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#ACACAC;border:none;color:#fff" @click='modelCancelshy'><Icon type="close" style="margin-right:5px;" ></Icon>取消</Button>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#3b77e3;color:#fff" @click="makeshr"><Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>确认</Button>
				</div>
			</div>
		</div>
	</Modal>
	<!--选择商品-->
	<Modal v-model="goodsinshow" width="760px">
		<p slot="header" style="height:30px;line-height:30px">

			<span>商品搜索</span>
		</p>
		<div style="position:relative;text-align:center;width:100%;height:35px;line-height:35px;display:flex;">
			<Input   placeholder="请输入商品条码" style="padding:2px 0" v-model="goodskeyword" @on-enter='enterSearch'></Input>
			<span @click="searchInput">
			<Icon type="search" size="16" style="display:inline-block;position:absolute;top:10px;right:18px;z-index:9" ></Icon>
			</span>
		</div>
		<!--商品数据-->
		<div slot="footer" style='margin-top:-10px'>
			<div class="table">
				<Table  border  height='300' highlight-row :columns="goodskey" :data="goods" @on-row-click="clickgoodsrow" @on-row-dblclick="dblclickgoodsrow"  @on-select='selectGoods' @on-select-cancel="cancelGoods" @on-select-all='selectAll' @on-selection-change="changeSelect">
				</Table>
				<div class="page-box">
				 <Page :total="total" show-total  :pageSize='pageSize'  @on-change="getData" @on-page-size-change="changePageSize"></Page>
				</div>
           	</div>

			<div class='title' style='margin:0px'>
				<div style='color:#D15151;font-size:14px'>
						<!-- <Icon type="plus" style='margin-right:5px'></Icon>
					<span >添加商品</span> -->
					</div>
				<div>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#ACACAC;border:none;color:#fff" @click='modelCancel'><Icon type="close" style="margin-right:5px;" ></Icon>取消</Button>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#3b77e3;color:#fff" @click="makegoods"><Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>确认</Button>
				</div>
			</div>
		</div>
	</Modal>
	<!--单证类型-->
	<Modal v-model="cgDZisshow" width="660px">
		<p slot="header" style="height:30px;line-height:30px">

			<span>单证类型</span>
		</p>
		<!--商品数据-->
		<div slot="footer">
			<div class='title'  style='margin:0px'>
				<div>
					<Input></Input>
				</div>
				<div>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#ACACAC;border:none;color:#fff" @click='modelCancel'><Icon type="close" style="margin-right:5px;" ></Icon>取消</Button>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#3b77e3;color:#fff" @click="makegoods"><Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>确认</Button>
				</div>
			</div>
		</div>
	</Modal>

<!--商品属性弹框-->
	<Modal v-model="attrModel" width="460px" >
		<p slot="header" style="height:30px;line-height:30px">

			<span>辅助属性</span>
		</p>
		<div class="table1">

			<div class='goodsInfoTop'>
				<span>{{$t('purchase.purchaseOrder.goodsInfo')}}：</span><span>{{goodsrow.skuName}}-{{goodsrow.barcode}} - {{goodsrow.unit}}</span><!--商品信息-->
			</div>
			<Table  border  height='300' highlight-row  :columns="sAttrskey"
			 :data="sAttrsData" @on-row-click="clickAttrRow" @on-select-all='mselectAll' @on-selection-change="mchangeSelect"></Table>
		</div>
		<div slot="footer">
			<div >
				<div>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#ACACAC;border:none;color:#fff" @click='modelCancelattr'><Icon type="close" style="margin-right:5px;" ></Icon>取消</Button>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#3b77e3;color:#fff;border:none" @click="cgtypeSureattr"><Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>添加</Button>
				</div>
			</div>
		</div>
	</Modal>

	<!--选择仓库弹出框-->
	<Modal v-model="warehouseshow" width="750px">
		<p slot="header" style="height:30px;line-height:30px">

			<span>{{$t('purchase.purchaseOrder.ck')}}</span><!--仓库搜索<-->
		</p>
		<div style="position:relative;text-align:center;width:100%;height:35px;line-height:35px;display:flex;">
			<Input v-model="ckkeyword" :placeholder="$t('public.codeandname')" style="padding:2px 0" @on-enter='enterSearchCH'></Input>
			<span @click="getckKeyword">
				<Icon type="search" size="16" style="display:inline-block;position:absolute;top:10px;right:18px;z-index:9" ></Icon>
			</span>
		</div>
		<div slot="footer">
			<!--仓库表格-->
			<Table  border height='300' highlight-row  :columns="ckkey" :data="allwarehouse" 
			@on-row-click="ckrow" @on-row-dblclick="dblckrow">
			</Table>
			<!--分页-->
            <div class="page-box" style="text-align:left">
			 <Page :total="cktotal" :pageSize='ckpageSize' show-total @on-change="getckData" @on-page-size-change="changeckPageSize"></Page>
			</div>
			<div class='title' style='margin:0px'>
				<div style='color:#D15151;font-size:14px'>
					<!-- <Icon type="plus" style='margin-right:5px'></Icon>
					<span >添加仓库</span> -->
				</div>
				<div>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#ACACAC;border:none;color:#fff" @click='modelCancel'><Icon type="close" style="margin-right:5px;" ></Icon>{{$t('public.cancel')}}</Button>
					<Button shape="circle" type="ghost" style="display:inline-block;background:#00A7F5;color:#fff" @click="makeck"><Icon type="checkmark-round" style=";margin-right:5px;color:#fff"></Icon>{{$t('public.sure')}}</Button>
				</div>
			</div>
		</div>
	</Modal>
			<!--精准搜索-->
    <Modal v-model="psisshow" width="420px">
    <p slot="header" style="height:30px;line-height:30px;text-align:center">

      <span>精准搜索</span>
    </p>
     <Form :label-width="100">

        <FormItem label="销售单号：" >
           <Input v-model='reNoL' ></Input>
        </FormItem>
        <FormItem label="客户名称：" >
           <Input v-model='supplierNameL' ></Input>
        </FormItem>
        <FormItem label="收货人" >
           <Input v-model='deliverNameL' ></Input>
        </FormItem>
        <FormItem label="单据日期">
			<DatePicker type="date" :value='poDateL' placeholder="请选择时间" style="width:100%" @on-change="shdatepoDate"></DatePicker>
        </FormItem>
       <FormItem label="收货日期">
		<DatePicker type="date" :value='deliveryDateL' placeholder="请选择时间" style="width:100%" @on-change="shdate"></DatePicker>
    	</FormItem>
    </Form>
    <div slot="footer">
      <div class='footer-mark'>
        <span><a style='color:#999;font-size:14px' @click='cancelSearchLocation'>取消</a></span>
        <span style='font-size:20px;width:1px;height:40px;background:#e4e4e4'></span>
        <span ><a style='color:#3B77E3;font-size:14px' @click='sureSearchLocation'>确认</a></span>
      </div>
    </div>
  </Modal>
  		<!--物流信息弹框-->
    <Modal v-model="pkisshow" width="420px">
    <p slot="header" style="height:30px;line-height:30px;text-align:center">

      <span>物流信息</span>
    </p>

     	<Form ref="logisticssave" :model="logisticsformValidate" :rules="logisticsruleValidate" :label-width="100" >
    	<FormItem label="发运方式：" prop="model2">
        	<Select v-model="logisticsformValidate.model2" @on-change="getlogistics1" label-in-value>
				<Option v-for="(item,index) in logisticstype1" :value="item.value" :key="index">{{item.label}}</Option>
			</Select>
   		</FormItem>
        <FormItem label="物流单号：" prop="logisticsNo1">
           <Input v-model='logisticsformValidate.logisticsNo1' ></Input>
        </FormItem>
    </Form>
    <div slot="footer">
      <div class='footer-mark'>
        <span><a style='color:#999;font-size:14px' @click='cancelSearchpk'>取消</a></span>
        <span style='font-size:20px;width:1px;height:40px;background:#e4e4e4'></span>
        <span ><a style='color:#3B77E3;font-size:14px' @click="sureSearchpk('logisticssave')">确认</a></span>
      </div>
    </div>
  </Modal>
  	<!--查库存-->
    <Modal v-model="ckisshow" width="420px">
    <p slot="header" style="height:30px;line-height:30px;text-align:center">

      <span>库存信息</span>
    </p>
     <div class='kcNumber'>
     	<div>
     		<span style='font-weight:bold;font-size:14px'>{{initskuName}}</span>
     	</div>
     	<div>
     		<span style="display:inline-block;width:100px;text-align:right">库存总数：</span><span style="display:inline-block;width:100px;">{{initqty}}</span>
     	</div>
     	<div>
     		<span style="display:inline-block;width:100px;text-align:right">发货数量：</span><span style="display:inline-block;width:100px;">{{skuqty}}</span>
     	</div>
     </div>
    <div slot="footer">
      <!--<div class='footer-mark'>
         <span><a style='color:#999;font-size:14px' @click='cancelSearchpk'>取消</a></span>
        <span style='font-size:20px;width:1px;height:40px;background:#e4e4e4'></span>
        <span ><a style='color:#3B77E3;font-size:14px' @click="sureSearchpk('logisticssave')">确认</a></span>
      </div> -->
    </div>
  </Modal>
  <!--导入-->
    <Modal v-model="importisshow" width="700" :mask-closable='false' :closable='false' :title="$t('manage.warehouse.fileImport')"><!--文件导入-->
        <el-steps  :active="active"  :align-center='true' style='margin-left:120px'>
              <el-step :title="$t('manage.warehouse.fileImport')" ></el-step>
              <el-step :title="$t('manage.warehouse.fileY')" ></el-step>
              <el-step :title="$t('manage.warehouse.fileS')" ></el-step>
            </el-steps>

       <!--第一步-->
        <div style='width:100%;margin:20px auto;text-align:center;' v-if='oneStep'>
           <div style='width:100%;margin:20px auto;text-align:center;font-size:14px;font-weight:600;border-top:1px solid #e4e4e4'>
				<span style='display:block;margin: 20px auto 30px 0;'>{{$t('manage.warehouse.fileImport')}}</span><!--文件导入-->
			</div>
            <div style='width:100%;margin:20px auto;text-align:center;position:relative'>
                <div style='margin-left:-108px'>
                	<span>{{$t('manage.warehouse.filechoose')}}：</span><!--选择文件-->
                  	<Input  disabled style='width:202px' v-model='url'></Input>
					<div style='position:absolute;top: 0px;right:175px;height: 35px;width: 80px;overflow: hidden;'>
						<el-upload
						ref="upload"
						:show-file-list='false'
						class="upload-demo"
						:action="actionUrl"
                        :on-progress='onprogress'
						:on-success='success'
						:before-upload='beforeAvatarUpload'
						accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" >
						<Button size="small" type="primary" style='background:#169BD5'>
						{{$t('manage.warehouse.upload')}}</Button><!--点击上传-->

						</el-upload>
					</div>
                    <div v-if='loadingisshow' >
                        <Spin fix>
                            <mu-icon value="rotate_right" color="blue"  class="demo-spin-icon-load"></mu-icon>
                            
                            <div>Loading...</div>
                        </Spin>
                    </div>
                    <div v-if='errorisshow' class='importErrTxt'>{{error}}</div>
                </div>
            </div>
            <div style='margin-top:40px;display: flex;justify-content:space-between;;margin-bottom:-40px;font-size:14px;cursor:pointer'>
                <Button  type="ghost" style='margin-left:5px;border:none;background:#169BD5;color:#fff'>

                     <a :href="skuLoad" style='color:#fff' @click.stop='stopsku($event)'>
                     {{$t('manage.warehouse.fileD')}}</a>
                </Button>
                <span style="" @click="cancel">{{$t('public.cancel')}}</span><!--取消-->
            </div>
        </div>
        <!--第二步-->
         <div style='width:100%;margin:20px auto;text-align:center;' v-if='twoStep'>
            <div style='width:100%;margin:20px auto;text-align:center;position:relative'>
                <Table border height='300' ref="selection"  :columns="importstore" :data="importstoredataList"></Table>
            </div>
            <div style='margin-top:40px;display: flex;justify-content:space-between;;margin-bottom:-40px;font-size:14px'>
                <div>共导入：<span style='color:blue'>{{importstoredataList.length}}</span> 条数据</div>
                <div>
                    <span style="" @click="cancel">{{$t('public.cancel')}}</span><!--取消-->
                    <span style="display:inline-block;margin:0 10px;font-size:14px" @click="">|</span>
                
                    <span style="color:#448AFF;font-size:14px" @click="gothree"><a>{{$t('public.sureBtn')}}</a></span><!--确认-->
                </div>
            </div>
         </div>
         
        <div slot="footer">

        </div>
    </Modal>
	<div class='tot'>
        <span>共<span style='color:#ff0000'> {{pototal}} </span>条</span>
        <span>当前第<span style='color:#ff0000'> {{current}} </span>页</span>
    </div>
	</div>
</template>

	<script>
	import LoadUrl from '@/components/common/actionLoad'
	import { regionData,CodeToText,TextToCode} from 'element-china-area-data'
	export default {

		data() {
			return {
				alertshr1:false,
				//当前日期之前都无法选择
				optionsB:this.optionsB,
				single:false,
				orderStrArr:[],
				orderStr:'',
				loading:true,
                skuLoad:"",//商品导入模板
                loadingisshow:false,
                isshowtable:true,
				errorisshow:false,
                error:'',//导入失败的提示
				        type:1,
                oneStep:true,//第一步显示
                twoStep:false,//第2步显示
                threeStep:false,//第3步显示
                active:1,//步数
                importisshow:false,//导入显示
                url:'',//选择文件后或名称
                importType:1,
                importStoreType:[
                    {
                        value:1,
                        label:'Excel'
                    }
				],
				//POST /sku/import 导入
				actionUrl:LoadUrl.httpPrefix.Url+'initinventory/sku?uid='+this.$store.state.common.token,//导入地址
                //导入的商品文件数据key
                importstore:[
                    {
						title: '单号',
						key: 'recordNo',
						width: 140,
					
					},
					{
						title:"物流公司",
						width:160,
						key:"logistics"
					},
					{
						title:"物流编号",
						width:160,
						key:"logisticsNo"
					},
					{
						title: '客户名称',
						align: 'center',
						width:160,
						
						key: 'partnerName'
					},
					{
						title:"总数量",
						align: 'center',
						width:100,
						key:"totalQty"
					},
					
					{
						title: '收货人',
						
						width:160,
						key: 'deliverName',
						align: 'center'
					},
					{
						title: '收货人手机',
						
						width:160,
						key: 'deliverMobile',
						align: 'center'
					},

					{
						title: '单据日期',
						
						width:170,
						key: 'recordDate',
						align: 'center'
					},
					{
						title: '到货日期',
						
						width:170,
						key: 'deliveryDate',
						align: 'center'
					},
                ],
				importstoredataList:[],//导入的仓库文件数据
				isSuccess1:false,
				isdel:false,
				ckObj:{},//仓库一行数据
				allwarehouse:[],//所有仓库
				//仓库
				ckkey:[
					{
						title:"编号",//编号
						width:180,
						key:"code"
					},
					{
						title:'名称',
						width:180,
						key:"name"
					},
					{
						title:"联系人",
						width:180,
						key:"person"
					},
					{
						title:"电话",
						width:180,
						key:"phone"
					},
					{
						title:"类型",
						width:180,
						key:"category"
					},
					{
						title:this.$t('public.status'),//状态
						width:100,
						key:"statusDesc"
					},
				],
				ckkeyword:'',
  				warehouseId:"",//仓库id
  				warehouseCode:"",//仓库编号
  				warehouseName:"",//仓库名
  				warehouseshow:false,
  				cktotal:0,
				ckpageSize:0,

				activeSend:1,//步骤
				activeIsShow:true,
				//弹框属性
				sAttrsData:[],
				sAttrskey:[
					{
						title:this.$t('purchase.purchaseOrder.num'),//数量
						key:"qty",
						width:100,
						align:"center",
						render:(h,parmas)=>{
						return h('InputNumber',{
								props:{
									value:parmas.row.qty,
									min:0
								},
								style:{
									width:"100%",
								},
								on:{
									'on-click':(e)=>{
										e.stopPropagation()
									},
									"on-change":(e)=>{
										this.allCouunt=e
										parmas.row.qty=this.allCouunt
										this.sAttrsData[parmas.index].qty=this.allCouunt
									},
									'on-blur':()=>{
										parmas.row.qty=this.allCouunt
										this.sAttrsData[parmas.index].qty=this.allCouunt

									}
								}
							})
						}
					},
					{
						title:this.$t('purchase.purchaseOrder.attrs'),//辅助属性
						key:"skuTypeDesc"
					},
				],
				cancelxiu:false,
				initskuName:'',//库存商品名称
				initqty:'',//库存商品总数
				skuqty:"",//当前点击的一行库存的数
				ckisshow:false,//查库存
				CodeToText:CodeToText,//code转为Text
				TextToCode:TextToCode,//Text转为code
				cityInfo:regionData,//地址数据
				selectedOptions2:[],//绑定的数据
				getEditChangeAddress:[],
				deliverCity:'',//市
				deliverCountry :'',//区
				deliverProvince:'',//省
				// cityData:cityData,
				status:'',
				statusD:'',
				shyModeData:{},
				deliverNames:[],//收货人，从客户地址管理中选取
				logisticsformValidate:{
					logisticsNo1:'',
					model2:'',
					logistics:"",
				},
				logisticsruleValidate:{
					logisticsNo1:[{ required: true, message: '请输入物流单号！', trigger: 'blur' },],
					model2:[{ required: true, message: '请选择物流！', trigger: 'change' }]
				},
				pkisshow:false,//物流弹框
				addtx:'新增发货单',//
				psisshow:false,
				searchKeyword:'',//精准搜索关键字
				//精准搜索
				reNoL:'',//单号x
              	poDateL:'',//单据日期
              	supplierNameL:'',//客户
             	deliveryDateL:'',//收货日期
				deliverNameL:'',//收货人名称
				fileBtn:true,
				attridMore:'',//多附件地址
				chaIndex:-1,
				soe:false,
				upData:[],//上传的数据
				upData1:[],//上传的数据
				actionUrl:LoadUrl.httpPrefix.Url+'file/action/upload?uid='+this.$store.state.common.token,//导入地址
				//新建销售数据
				xiaoshouformValidate:{
					partnerName:'',//客户名称
					salesType:'',//销售类型
					model1:'',//发运方式
					modeldztype:'',//支付方式
					recordDate:'',//单据日期
					deliverName:'',//收货人
					deliverMobile:'',
					deliverTel:'',
					warehouseName:"",//仓库
				},
				//新建销售验证
				xiaoshouruleValidate:{
					partnerName:[{ required: true, message: '请选择客户！', trigger: 'change' }, ],
					warehouseName:[{ required: true, message: '请选择仓库！', trigger: 'change' }, ],
					deliverName:[{ required: true, message: '请输入收货人名称！', trigger: 'change' }, ],
					deliverMobile:[
					
					{ pattern:/^1[3|4|5|7|8][0-9]{9}$/, message: '请输入正确的手机号码' }
					],
					deliverTel:[
					
					{ pattern: /(^[0-9]{3,4}\-[0-9]{3,8}$)|(^[0-9]{3,8}$)|(^\([0-9]{3,4}\)[0-9]{3,8}$)|(^0{0,1}13[0-9]{9}$)/, message: '请输入正确的电话号码' }
					]
					
				},
				//收货人
				shrtotal:0,
				shrpageSize:0,
				alertshr:false,
				shrkey:[
					{
						title:"名称",
						key:"name"
					},
					{
						title:"地址",
						key:"Raddress"
					},
					{
						title:"手机号",
						key:"mobile"
					}
				],
				shrdata:[],//收货人
				shr:{},//点击一行获取的收货人
				//
				xiugaishow:false,//修改
				dy:false,//打印
				zf:false,//作废
				qs:false,//弃审
				sh:false,//审核
				wc:false,//完成
				packageshow:false,//打包
				shipmentshow:false,//装载
				deliveryshow:false,//发货
				total1:0,
				pageSize1:0,
				total2:0,
				pageSize2:0,
				mx:'新建订单',
				salesPrice:0,
				b:{},
				clear:true,
				model1:'',
				allCouunt:1,
				selec:'请选择规格',
				liIndex:0,
				attrsArr:[],//属性数组
				loading:'Loading......',
				status:'',
				pototal:0,
				popageSize:0,
				currnetisshow:false,
				/*辅助属性*/
				attrtotal:0,
				attrpageSize:0,
				attrModel:false,//辅助属性弹框
				attrkey:[
					{
						type:"selection",
						width:60
					},
					{
						title:"辅助属性名称",
						ellipsis:true,

						key:"name",

					},
					// {
					// 	title:"辅助属性规格",
					// 	ellipsis:true,
					// 	key:'action',
					// 	render:(h,parmas)=>{
					// 		return h('a',{

					// 			on:{
					// 				'click':()=>{
					// 					////console.log(parmas.row.detailVos)
					// 				}
					// 			}
					// 		},'s')
					// 	}
					// }

				],
				/*辅助属性*/
				attr:[],

				allpriceNum:0,
				nindex:0,
				cgDZisshow:false,
				cgDZname:'添加单证类型',

				cgtypeisshow:false,
				cgtypename:'添加采购类型',
				cgtypeTitle:"",
				cgtypeKey:"",


				ckkeyword:'',//仓库搜索关键词
				gyskeyword:'',//供应商搜索关键词
				goodskeyword:'',//商品搜索关键词
				warehouseshow:false,
				warehouseshow1:false,

				datacgList:[],//订单列表
				model4:'全部',
				modeldztype:'',
				type:0,//
				cgType:'',//采购类型
				height:'',
				current:1,
				numIndex:-1,//左侧列表选中下标
				bordercode:[],

			
				total:0,
				pageSize:0,
				unittotal:0,
				unitpageSize:0,
				num: 1, //判断基本信息 切换的样式
				num2:0,
				addNewUnits:"",
				orderText:"新建订单",
				addText:true,
				cgbordercode: false, //供应商详细信息
				alertch:false,
				alertch1:false,
				alertshr1:false,
				bordercodeisshow:false,
				editshow:true,
				
				//0：未提交 1：提交 2：已审核 3：派送中 6：待打包 7：待装载 8：待发货
				valueT:0,
				orderListname:[
					{
						label:"全部",
						value:0
					},
					{
						label:"待提交",
						value:1
					},
					{
						label:"已提交",
						value:3
					},
					{
						label:"打包中",
						value:5
					},
					{
						label:"已发货",
						value:8
					},
					{
						label:"已完成",
						value:88
					},
				],
				//支付类型列表
				dztype:[],
				alltrue:false,//选中全部条码
				//运送方式
				logisticstype:[
				{
					value: '1',
					label: '顺丰'
				},
				{
					value: '2',
					label: '韵达'
				},
				{
					value: '3',
					label: '圆通'
				}
				],
				//打包弹框运送方式
				logisticstype1:[
				{
					value: '1',
					label: '顺丰'
				},
				{
					value: '2',
					label: '韵达'
				},
				{
					value: '3',
					label: '圆通'
				}
				],

				model1: '',
				model2: '',
				columns: [
				{
					title: '订单编号',

					key: 'code'
				},
				{
					title: '参考号',

					key: 'ckhao'
				},
				{
					title: '日期',

					key: 'date'
				},
				{
					title: '金额',

					key: 'price'
				},
				{
					title: '状态',

					key: 'status'
				}
				],
				//出库明细
				cktotal1:0,
				ckpageSize1:0,
				cgListInfo:[],//出库明细列表
				cgListInfoKey:[
						{
							title:"条码",

							width:140,
							key:"barcode"
						},
						{
							title:"货号",

							width:140,
							key:"skucode"
						},
						{
							title:"货区",

							width:120,
							key:"zoneNo"
						},
						{
							title:"货位",

							width:120,
							key:"locationNo"
						},
						{
							title:"商品名称",

							width:160,
							key:"skuName"
						},
						{
							title:"单位",

							width:100,
							key:"unit"
						},
						{
							title:"发货数量",

							width:100,
							key:"qty"
						},
						{
							title:"发货前数量",

							width:100,
							key:"qtyBefore"
						},
						{
							title:"发货后数量",

							width:100,
							key:"qtyAfter"
						},
						{
							title:"存储编号",

							width:100,
							key:"warehouseCode",

						},
						{
							title:"仓库",
							width:100,
							key:"warehouseName",

						},
						{
							title:"日期",

							key:'createTime',
							width:100,
						},
						{
							title:"属性",

							key:'skuTypeDesc',
							width:180,
						},
						{
							title:"操作",
							key:"action",
							align:"center",
							width:100,
							render:(h,params)=>{//params.row
								return h('Button',{
									props:{
										type:"primary"
									},
									on: {
										click: () => {
												this.ckisshow=true
												this.skuqty=params.row.qty
												console.log(params.row.skuId)
												this.axios.get('/inventory/listDetail?uid='+this.uid+'&skuId='+params.row.skuId).then(res=>{
									            		if(res.data.status==200){
									            			console.log(res.data.rows)
									            			// this.inqty=res.data.rows
									            			this.initskuName=res.data.rows[0].skuName
									            			this.initqty=res.data.rows[0].qty

									            		}
									            	})
											}
									}
								},'查看库存')
							}
						}

				],
				//分配明细
				fpListInfo:[],
				fptotal1:0,
				fppageSize1:0,
				fpListInfoKey:[
				{
							title:"条码",

							width:140,
							key:"barcode"
						},
						{
							title:"货号",

							width:140,
							key:"skucode"
						},
						{
							title:"货区",

							width:120,
							key:"zoneNo"
						},
						{
							title:"货位",

							width:120,
							key:"locationNo"
						},
						{
							title:"商品名称",

							width:160,
							key:"skuName"
						},
						{
							title:"单位",

							width:100,
							key:"unit"
						},
						{
							title:"发货数量",

							width:100,
							key:"qty"
						},
						{
							title:"发货前数量",

							width:100,
							key:"qtyBefore"
						},
						{
							title:"发货后数量",

							width:100,
							key:"qtyAfter"
						},
						{
							title:"存储编号",

							width:100,
							key:"warehouseCode",

						},
						{
							title:"仓库",
							width:100,
							key:"warehouseName",

						},
						{
							title:"日期",

							key:'createTime',
							width:100,
						},
						{
							title:"属性",

							key:'skuTypeDesc',
							width:180,
						},
				],
				//收货记录
				chListjl:[
					{
						title:"单号",

						key:"recordNo"
					},
					{
						title:"状态",

						key:"title"
					},

					{
						title:"时间",

						key:"createTime"
					},

				],
				//日志数据
				chreceipt:[],
				//存货的数组数据
				cunhuodata:[{skuName:'选择商品',allprice:0}],

				//操作存货 新增时
			cunhuo:[
					{
						title: '操作',
						key: 'action',
						width: 100,
						align: 'center',
						render: (h, params) => {
							return h('div', [
								h('div', {
									style: {
										float: 'left',
										marginRight: '5px'
									},
									on: {
										click: (e) => {
												//点击加号
												e.stopPropagation()
												// this.cunhuodata.push({})
											}
										}
									}, [
									h('img', {
										domProps: {
											src: 'http://img.zsydian.com/icon/add.png',
											style: "width:20px;height:20px;cursor:pointer"
										},
										on:{
											'click':()=>{
												//单击添加
												this.allCouunt=1
												this.clickchrow()
											}
										}
									})
									]),
								h('div', {
									style: {
										float: 'left',
										marginRight: '5px'

									},
									on: {
										click: () => {
												// this.delGoods(params.row.id);
											}
										}
									}, [
									h('img', {
										domProps: {
											src: 'http://img.zsydian.com/icon/tabledel.png',
											style: "width:20px;height:20px;cursor:pointer"
										},
										on:{
											click:(e)=>{
												e.stopPropagation()
													//删除行
													if(!params.index==0){
													this.cunhuodata.splice(params.index,1)
														// this.remove(params.index)
														this.soDetailList.splice(params.index-1,1)
														console.log(this.soDetailList)
													}
													// if(params.index==0){
													// 	return
													// }
													// this.remove(params.index)

												}
											}

										})
									])
								]);
						}
					},
					{
						title:"货号",

						key:"skucode",
			
					},
					{
						title:"商品名称",
						width:170,
						key:"skuName",
						align: 'left'
					},
					{
						title:"数量",
						width:70,
						key:"qty",
						render:(h,parmas)=>{
							return h('InputNumber',{
									style:{

										width:"67px",
										height:"30px",
										marginLeft:"-17px",
										lineHeight:'30px',
										
										display:parmas.index==0?"none":"block",
										
									},
									props:{

										value:parmas.row.qty,
										min:1
									},

									on:{
										'on-click':(e)=>{
											// this.nindex=parmas.index
											e.stopPropagation()
										},
										"on-change":(e)=>{

											this.allCouunt =e
											parmas.row.qty= e
											this.cunhuodata[parmas.index]=parmas.row
											this.soDetailList[parmas.index-1]=parmas.row
											this.cunhuodata[parmas.index].qty=this.allCouunt
											// ////console.log(parmas.row.qty)
											parmas.row.allprice=Number(parmas.row.salesPrice)*parseInt(Number(this.allCouunt))
											parmas.row.allprice.toFixed(2)
											parmas.row.amount=Number(parmas.row.salesPrice)*parseInt(Number(this.allCouunt))
											parmas.row.amount.toFixed(2)


										},
										'on-blur':()=>{
												let resultqty=0
												let resultPrice=0
												this.cunhuodata[parmas.index].qty=parseInt(this.allCouunt)
												this.cunhuodata[parmas.index].allprice=this.cunhuodata[parmas.index].salesPrice*this.allCouunt
												for(let i=0;i<this.soDetailList.length;i++){
													resultqty+=parseInt(this.soDetailList[i].qty)
													resultPrice+=Number(this.soDetailList[i].allprice)
										
												}


											}
										}
									})
						}
					},
					{
						title:"销售价",
						width:100,
						key:"salesPrice",
						// render:(h,parmas)=>{
						// 	return h('Input',{
						// 			style:{

						// 				width:"97px",
						// 				height:"40px",
						// 				marginLeft:"-17px",
						// 				lineHeight:'40px',

						// 				border:'none'

						// 			},
						// 			props:{

						// 				value:parmas.row.salesPrice


						// 			},

						// 			on:{
						// 				'on-click':(e)=>{
						// 					// this.nindex=parmas.index
						// 					e.stopPropagation()
						// 				},
						// 				"on-change":(e)=>{

						// 					this.salesPrice = Number(e.target.value)
						// 					parmas.row.salesPrice= Number(e.target.value)

						// 					// ////console.log(parmas.row.qty)
						// 					parmas.row.allprice=Number(parmas.row.salesPrice)*Number(this.salesPrice)
						// 					parmas.row.allprice.toFixed(2)


						// 				},
						// 				'on-blur':()=>{
						// 						let resultqty=0
						// 						let resultPrice=0
						// 						this.cunhuodata[parmas.index].salesPrice=Number(this.salesPrice)
						// 						this.cunhuodata[parmas.index].allprice=this.cunhuodata[parmas.index].salesPrice*this.allCouunt

						// 						// ////console.log(this.soDetailList)
						// 						for(let i=0;i<this.soDetailList.length;i++){
						// 							resultqty+=parseInt(this.soDetailList[i].qty)
						// 							resultPrice+=Number(this.soDetailList[i].allprice)
						// 							// ////console.log(this.cunhuodata[i].qty)
						// 						}

						// 					////console.log(resultPrice)
						// 					this.totalCount=parseInt(resultqty)//总数量
						// 					this.totalAmount=resultPrice//总价值
						// 					this.totalAmount.toFixed(2)//总价值


						// 					}
						// 				}
						// 			})
						// }
					},
					{
						title:"单位",
				

						key:"unit"
					},
					{
						title:"库存",
				

						key:"inventory"
					},
					{
						title:"总价",
						key:'allprice',
						width:120,
						render:(h,parmas)=>{
							return h('span',{
								style:{
									color:'red'
								}
							},Number(parmas.row.allprice).toFixed(2))
						}
					},
					{
						title:"属性",
						width:180,
						key:"skuTypeDesc"
					}
				],
			cunhuoE:[
					{
						title: '操作',
						key: 'action',
						width: 100,
						align: 'center',
						render: (h, params) => {
							return h('div', [
								h('div', {
									style: {
										float: 'left',
										marginRight: '5px'
									},
									on: {
										click: (e) => {
												//点击加号
												e.stopPropagation()
												// this.cunhuodata.push({})
											}
										}
									}, [
									h('img', {
										domProps: {
											src: 'http://img.zsydian.com/icon/add.png',
											style: "width:20px;height:20px;cursor:pointer"
										},
										on:{
											'click':()=>{
												//单击添加
												this.allCouunt=1
												this.clickchrow()
											}
										}
									})
									]),
								h('div', {
									style: {
										float: 'left',
										marginRight: '5px'

									},
									on: {
										click: () => {
												// this.delGoods(params.row.id);
											}
										}
									}, [
									h('img', {
										domProps: {
											src: 'http://img.zsydian.com/icon/tabledel.png',
											style: "width:20px;height:20px;cursor:pointer"
										},
										on:{
											click:(e)=>{
												e.stopPropagation()
													//删除行
													if(this.soDetailList.length==1){
														this.soDetailList=[{skuName:this.$t('operation.yhqHome.choosesku'),amount:0,qty:0,salesPrice:0,allprice:0}]//'选择商品'
													}else{
														this.remove(params.index)
													}

												}
											}

										})
									])
								]);
						}
					},
					{
						title:"货号",

						key:"skucode",
						width:120,
					},
					{
						title:"商品名称",
						width:160,
						key:"skuName",

						align: 'left'
					},
					{
						title:"数量",
						width:70,
						key:"qty",
						render:(h,parmas)=>{
							return h('InputNumber',{
									style:{

										width:"67px",
										height:"30px",
										marginLeft:"-17px",
										lineHeight:'30px',
									
										display:parmas.row.skuName=="选择商品"?"none":"block",
										
									},
									props:{

										value:parmas.row.qty,
										min:1


									},

									on:{
										'on-click':(e)=>{
											// this.nindex=parmas.index
											e.stopPropagation()
										},
										"on-change":(e)=>{

											this.allCouunt =e
											parmas.row.qty= e
											this.soDetailList[parmas.index]=parmas.row

											this.soDetailList[parmas.index].qty=this.allCouunt
											parmas.row.allprice=Number(parmas.row.salesPrice)*parseInt(Number(this.allCouunt))
											parmas.row.allprice.toFixed(2)
											parmas.row.amount=Number(parmas.row.salesPrice)*parseInt(Number(this.allCouunt))
											parmas.row.amount.toFixed(2)

										},
										'on-blur':()=>{
												let resultqty=0
												let resultPrice=0
												this.soDetailList[parmas.index].qty=parseInt(this.allCouunt)
												this.soDetailList[parmas.index].allprice=this.soDetailList[parmas.index].salesPrice*this.allCouunt
												this.soDetailList[parmas.index].amount=Number(parmas.row.salesPrice)*parseInt(Number(this.allCouunt))
												// ////////console.log(this.soDetailList)
												for(let i=0;i<this.soDetailList.length;i++){
													resultqty+=parseInt(this.soDetailList[i].qty)
													resultPrice+=Number(this.soDetailList[i].allprice)
													
												}

											}
										}
									})
						}
					},
					{
						title:"销售价",

						width:100,
						key:"salesPrice",
						// render:(h,parmas)=>{
						// 	return h('Input',{
						// 			style:{

						// 				width:"97px",
						// 				height:"40px",
						// 				marginLeft:"-17px",
						// 				lineHeight:'40px',

						// 				border:'none'

						// 			},
						// 			props:{

						// 				value:parmas.row.salesPrice


						// 			},

						// 			on:{
						// 				'on-click':(e)=>{
						// 					// this.nindex=parmas.index
						// 					e.stopPropagation()
						// 				},
						// 				"on-change":(e)=>{

						// 					this.salesPrice = Number(e.target.value)
						// 					parmas.row.salesPrice= Number(e.target.value)

						// 					// ////console.log(parmas.row.qty)
						// 					parmas.row.allprice=Number(parmas.row.salesPrice)*Number(this.salesPrice)
						// 					parmas.row.allprice.toFixed(2)


						// 				},
						// 				'on-blur':()=>{
						// 						let resultqty=0
						// 						let resultPrice=0
						// 						this.cunhuodata[parmas.index].salesPrice=Number(this.salesPrice)
						// 						this.cunhuodata[parmas.index].allprice=this.cunhuodata[parmas.index].salesPrice*this.allCouunt

						// 						// ////console.log(this.soDetailList)
						// 						for(let i=0;i<this.soDetailList.length;i++){
						// 							resultqty+=parseInt(this.soDetailList[i].qty)
						// 							resultPrice+=Number(this.soDetailList[i].allprice)
						// 							// ////console.log(this.cunhuodata[i].qty)
						// 						}

						// 					////console.log(resultPrice)
						// 					this.totalCount=parseInt(resultqty)//总数量
						// 					this.totalAmount=resultPrice//总价值
						// 					this.totalAmount.toFixed(2)//总价值


						// 					}
						// 				}
						// 			})
						// }
					},
					{
						title:"单位",
						width:70,

						key:"unit"
					},
					{
						title:"库存",
						width:70,

						key:"inventory"
					},
					{
						title:"总价",
						key:'allprice',
						width:120,
						render:(h,parmas)=>{
							return h('span',{
								style:{
									color:'red'
								}
							},Number(parmas.row.allprice).toFixed(2))
						}
					},
					{
						title:"属性",
						width:180,
						key:"skuTypeDesc"
					}
				],	
                //弹出框供应商table
                gyskey:[
	                 {
	                	title:"编码",
	               	 	width:160,
	                	key:"code",

	                },
	                {
	                	title:"名称",

	                	width:260,
	                	key:"name"
	                },

	                {
	                	title:"手机号",
	                	width:160,
	                	key:"contractPhone"
	                },
	                {
	                	title:"电话",
	               		width:160,
	                	key:"contractTel"
	                },
	                {
						title:"状态",
						width:80,
						key:"statusDesc",
						 render:(h,parmas)=>{
                            return h('span',{
                                style:{
                                    color:parmas.row.statusDesc=='正常'?'#40ca98':'#d53c39'
                                }
                            },parmas.row.statusDesc)
                        }
					}

                ],
	                //弹出框商品data
	                goodskey:[
	                	{
		                	type: 'selection',
		                	width:60
		                },
		                {
		                	title:"商品图片",
		                	width:100,

		                	key:"mainPhoto",
		                	 render:(h, params) =>{
	                        	return h('div',[
	                        			h('img',{
	                        				attrs:{
	                        					src:params.row.mainPhoto
	                        				},
	                        				style:{
	                        					width:'40px',
	                        					height:'40px'
	                        				}
	                        			})
	                        		])
	                        }
		                },
		                {
		                	title:"商品名称",
		             		width:160,

		                	key:"skuName"
		                },
		                {
		                	title: '商品货号',
		                	key:'skuCode',
		               		width:160,
		                	align: 'center'
		                },
		                {
		                	title: '单位',
		                	key:'unit',
		               		width:160,
		                	align: 'center'
		                },
		                {
		                	title: '吊牌价',
		                	key:'price',
							width:100,
		                	align: 'center'
		                },
		                {
		                	title: '成本价',
		                	key:'costPrice',
							width:100,
		                	align: 'center'
		                },
		              	{
		                	title: '批发价',
		                	key:'wholePrice',
							width:100,
		                	align: 'center'
		                },
		                {
		                	title: '商品品牌',
		                	key:'barnd',
		               		width:160,
		                	align: 'center'
		                },
		                {
		                	title: '商品分类',
		                	key:'className',
		               		width:160,
		                	align: 'center'
		                },

		     //            {
		     //            	title: '最高库存',
		     //            	key:'inventorUyUp',
							// width:100,
		     //            	align: 'center'
		     //            },

	                ],
                //记录
                jl:[
                	{
                		title:"采购单号",
                		key:"recordNo"
                	},
                	{
                		title:"收货方",
                		key:"deliverName"
                	},
                	{
                		title:"收货方手机",
                		key:"deliverMobile"
                	},
                	{
                		title:"签收数量",
                		key:"deliveryQty"
                	},
                	{
                		title:"物流",
                		key:"logistics"
                	},
                	{
                		title:"收货仓库",
                		key:"deliverWarehouseName"
                	},
                	{
                		title:"采购单号",
                		key:"recordNo"
                	},
                	{
                		title:"供应商",
                		key:"partnerName"
                	},
                ],
                //记录数据
                jldata:[],
                titles:["出库明细","分配明细","日志",'附件列表'],
                id:"",
				// data:[],
				userList:[],//联系人列表
				Allpo: [], //采购列表

				cgxqInfo:{},//采购订单详情
				goods:[],//商品列表

				signDate:'',//签收日期
				recordNo:"",//单号
				poId :"",//采购编号 ,
				pono :"", //采购单号 ,
				deliveryQty:"",//已发运数量
				//供应商信息
				deliverWarehouseName:'',//供应商仓库名
		        deliverWarehouseCode:'',//供应商仓库名编号
		        deliverWarehouseId:'',//供应商仓库名id
				gysdata:[],//供应商列表

				tel:"",//供应商电话
				phone:"",//供应商手机
				totalAmount:0,//总货值
				fax:"",//供应商传真
				person:"",//供应商联系人
  				email:"",//联系人邮箱
  				address:"",//联系人地址
  				//仓库信息
  				allwarehouse:[],//所有仓库
  				allwarehouseNAMEID:[],
  				warehouseId:"",//仓库id
  				warehouseCode:"",//仓库编号
  				warehouseName:"",//仓库名

				//采购订单明细
				soDetailList:[],
				skuId:"",//商品编号 ,
				skuTypeId:"",//属性编号 ,
				skuTypeDesc:"", //属性描述 ,
				costPrice:"",// 采购价格 ,
				skucode:"",//商品编码
				logistics:'',//物流公司
				logisticsNo:'',//物流编号

				totalQty:"",//采购的总数量
				remark:"",//备注 ,
				uid: this.$store.state.common.token,
				qty:"",
				allgyslength:0,
				goodsinshow:false,
				goodsrow:{},//弹框获取商品一行数据
				goodsId:"",
				totalCount:0,
				goodsid:'',
				attrname:"",
				attrid:'',

				deliveryDate:'',//交货日期
				salesType:'',//销售类型
				partnerId:'',//客户id
				partnerName:'',//客户名称
				payType:'',//付款方式
				recordDate:'',//单据日期
				soDetailList:[],//销售订单明细

				//收货方
				deliverName:"",//收货方名称
				deliverTel:"",//收货人电话
				deliverMobile:"",//收货人手机
				deliverAddress:"",//收货人地址
				attrid:'',//多附件id

				salesInfoadd:{},//复制新增详情
				sAttrsUnits:[],
				unitStr:"",
				rowgoodsData:{},//一行商品数据
				attrIdDataALL:[],
				rowgoodsDataAll:[],
			}
		},
		methods: {
			//省市区
			handleChange(arr){
				this.deliverProvince = this.CodeToText[arr[0]]
				this.deliverCity =this.CodeToText[arr[1]]
				this.deliverCountry = this.CodeToText[arr[2]]
            	// let arr=[]
            	// arr=this.getCascaderObj(this.selectedOptions2,this.cityInfo)
            	// this.deliverProvince=arr[0].label
            	// this.deliverCity=arr[1].label
            	// this.deliverCountry=arr[2].label

            },
         //   getCascaderObj(val,opt) {
	        //     return val.map(function (value, index, array) {
	        //         for (var itm of opt) {
	        //             if (itm.value == value) { opt = itm.children; return itm; }
	        //         }
	        //         return null;
	        //     });
	        // },
			// changeAddress(v,data){
			// 	this.deliverProvince=data[0].label//省
	  //        	this.deliverCity=data[1].label//市

			// },
			//双击获取订单详情
			getcginfo(id,index,item){
				this.numIndex = index
				this.id = id;//当前双击的ID
				this.addText = false
				this.bordercodeisshow=false
				this.editshow = true
				this.fileBtn = false
				this.cancelxiu=true
				this.$refs.divsave.style.display="none"
				this.$refs.detail.style.display="block"
				this.$refs.edit.style.display="none"
				this.getDefaultAnddetails(id)
				this.getmx()//出库明细
				this.getshjl(id)
				this.orderStr=id//单击选中左侧列表的id
				this.Allpo.forEach((x)=>{
					x.check=false
					item.check=true
				})

			},
			//获取详情，明细
			getDefaultAnddetails(id){
				this.status=''
				this.statusD=''
				//获取采购订单详情上方
				this.axios.get('/ship/get/'+id+'?uid='+this.uid).then((res)=>{

					if(res.data.status==200){
						this.status=res.data.rows.status
						this.statusD=res.data.rows.deliveryStstus
						//待审核
						if(this.status==0&&this.statusD==0){
							this.editshow=false
							this.sh=true
							this.qs=true
							this.zf=true
							this.dy=false
							this.wc=false
							this.xiugaishow=true
							this.activeSend=1
							this.isdel=true
							this.isSuccess1=false
						}
						//待提交
						if(this.status==1){
							this.sh=true
							this.packageshow=false
							this.shipmentshow=false
							this.deliveryshow=false
							this.zf=true
							this.editshow=false
							this.dy=false
							this.qs=true
							this.xiugaishow=true
							this.wc=false
							this.activeSend=1
							this.isdel=true
							this.isSuccess1=false
						}
						//已提交待打包
						if(this.status==3&&this.statusD==1){
							this.packageshow=true
							this.shipmentshow=false
							this.deliveryshow=false
							this.zf=true
							this.editshow=false
							this.dy=false
							this.qs=false
							this.sh=false
							this.xiugaishow=false
							this.wc=false
							this.activeSend=2
							this.isdel=true
							this.isSuccess1=false
						}

						//已打包带装载
						if(this.statusD==2 && this.status==5){
							this.wc=false
							this.deliveryshow=false
							this.shipmentshow=true
							this.packageshow=false
							this.sh=false
							this.zf=false
							this.editshow=false
							this.dy=false
							this.qs=false
							this.xiugaishow=false
							this.activeSend=3
							this.isdel=true
							this.isSuccess1=false
						}
						//装载
						if(this.statusD==3 && this.status==5){
							this.wc=false
							this.deliveryshow=true
							this.shipmentshow=false
							this.packageshow=false
							this.sh=false
							this.zf=false
							this.editshow=false
							this.dy=false
							this.qs=false
							this.xiugaishow=false
							this.activeSend=4
							this.isdel=true
							this.isSuccess1=false
						}
						//登记物流
						if(this.statusD==9 && this.status==8){
							this.wc=true
							this.deliveryshow=false
							this.shipmentshow=false
							this.packageshow=false
							this.sh=false
							this.zf=false
							this.editshow=false
							this.dy=false
							this.qs=false
							this.xiugaishow=false
							this.activeSend=5
							this.isdel=true
							this.isSuccess1=false
						}
						//派送中
						if(this.status==8){
							this.deliveryshow=false
							this.xiugaishow=false
							this.zf=false
							this.editshow=false
							this.dy=true
							this.qs=false
							this.wc=true
							this.isdel=false
							this.fileBtn=false
							this.isSuccess1=false
						}
						//已完成
						if(this.status==88){
							this.deliveryshow=false
							this.xiugaishow=false
							this.packageshow=false
							this.shipmentshow=false
							this.zf=false
							this.editshow=false
							this.dy=false
							this.qs=false
							this.wc=false
							this.sh=false
							this.fileBtn=false
							this.activeSend=6
							this.isdel=false
							this.isSuccess1=true
						}

						let data=res.data.rows
						this.xiaoshouformValidate.partnerName=data.partnerName//供应商名称
		            	this.partnerId=data.partnerId//供应商id
						this.tel=data.deliverTel
						this.phone=data.phone
						this.fax=data.fax
		  				this.email=data.email
		  				this.address=data.address
		  				this.xiaoshouformValidate.deliverName=data.deliverName
		  				this.xiaoshouformValidate.deliverTel=data.deliverTel
		  				this.xiaoshouformValidate.deliverMobile=data.deliverMobile
		  				this.deliverAddress=data.deliverAddress
						this.xiaoshouformValidate.warehouseName=data.warehouseName
						this.warehouseId=data.warehouseId
						this.warehouseCode=data.warehouseCode
						this.xiaoshouformValidate.salesType=data.salesType
						this.recordDate=data.recordDate //订单日期
						this.xiaoshouformValidate.recordNo=data.recordNo
						this.totalAmount=data.totalAmount
						this.totalCount=data.totalCount
						this.xiaoshouformValidate.modeldztype=data.payType//支付类型
						this.deliveryDate=data.deliveryDate

						this.cgxqInfo = res.data.rows
						this.logisticsNo=res.data.rows.logisticsNo//物流编号
						this.logistics=res.data.rows.logistics//物流公司
						this.recordNo = res.data.rows.recordNo//单号
						this.addtx=res.data.rows.recordNo
						this.status=res.data.rows.ststus//当前订单状态
						this.upData=res.data.rows.fileList
						this.upData1=res.data.rows.fileList
						//修改附件的链接
						let strvalue=[]//id链接
						if(this.upData==null){//判断是否有附件
							this.upData=[]
						}else{
							for(let i =0;i<this.upData.length;i++){
								if(this.upData[i].key==''){
									this.upData.splice(i,1)
								}else{
									strvalue.push(this.upData[i].key.key)
								}
							}
							let s1 = strvalue.join(',')
							this.attridMore = s1//id链接后字符串

						}

						this.cgxqInfo.recordDate=new Date(this.cgxqInfo.recordDate).toLocaleDateString().replace(/\//g,'-')
							this.cgxqInfo.deliveryDate=new Date(this.cgxqInfo.deliveryDate).toLocaleDateString().replace(/\//g,'-')
							if(this.cgxqInfo.recordDate=='Invalid Date'){
								this.cgxqInfo.recordDate='未指定'
							}
							if(this.cgxqInfo.deliveryDate=='Invalid Date'){
								this.cgxqInfo.deliveryDate='未指定'
							}
							console.log(res.data.rows)
							//接收地址
						this.deliverProvince=res.data.rows.deliverProvince
                		this.deliverCity=res.data.rows.deliverCity
                		this.deliverCountry=res.data.rows.deliverCountry
                		//转为code
                		if(this.deliverProvince==null || this.deliverProvince=='' || this.deliverCity==null|| this.deliverCity=='' || this.deliverCountry==null ||this.deliverCountry==''){
                			this.selectedOptions2=[]
                		}else{
                			this.selectedOptions2=[
	                			this.TextToCode[this.deliverProvince].code,
	                			this.TextToCode[this.deliverProvince][this.deliverCity].code,
	                			this.TextToCode[this.deliverProvince][this.deliverCity][this.deliverCountry].code
	                			]
                		}

					}
				})
				// //获取出库明细GET /ship/detail/{id}
				// this.axios.get('/ship/detail/'+id+'?uid='+this.uid).then((res)=>{
				// 	if(res.data.status==200){
				// 		this.cgListInfo = res.data.rows
				// 		this.total1=res.data.total
				// 		this.pageSize1=res.data.pageSize1
				// 		let totalP;//添加总价变量
				// 		this.cgListInfo.forEach((item)=>{
				// 			totalP = item.salesPrice*item.qty
				// 			totalP = item.price*item.qty

				// 			item['totalP'] = totalP//添加一个属性总价
				// 		})
				// 	}else{
				// 		// //this.$Message.error(res.data.errorMessage);
				// 	}
				// })
			},




			//点击新建
			addUnit(){
				this.partnerName=''//供应商名称
				this.addText = true
				this.bordercodeisshow = false
				this.$refs.detail.style.display="none"
				this.addtx = "新增发货单"
				//新增日期时间
				this.recordDate=''
				this.deliveryDate=''
				this.$refs.divsave.style.display="block"
				this.address=''//发货人地址
				this.xiaoshouformValidate.deliverName=''//收货方名称
				this.xiaoshouformValidate.salesType=''//收货方名称
				this.xiaoshouformValidate.modeldztype=''//收货方名称
				this.xiaoshouformValidate.partnerName=''
				this.deliverAddress=''
				this.xiaoshouformValidate.deliverTel=''//收货人电话
				this.xiaoshouformValidate.deliverMobile=''//收货人手机
				this.xiaoshouformValidate.warehouseName=''
				this.warehouseId=''
				this.warehouseCode=''
				this.soDetailList=[]
    			//仓库
        		this.deliverWarehouseName=''//供应商仓库名
        		this.deliverWarehouseCode=''//供应商仓库名编号
        		this.deliverWarehouseId=''//供应商仓库名id
        		this.deliverProvince=''
  				this.deliverCity=''
  				this.deliverCountry=''
        		this.selectedOptions2=[]
            	this.partnerId=''//供应商id
				this.recordNo=''//单号
				this.totalQty=''//采购数量
				this.deliveryQty=''//已发运数量
				this.xiaoshouformValidate.model1=''//物流公司
				this.logisticsNo=''//物流编号
				this.tel=''

				this.recordNo=''
				this.model2 = ""
				this.cunhuodata=[{skuName:'选择商品',allprice:0}]
				this.upData=[]
				this.upData1=[]
				this.attridMore=''
				this.cancelxiu=false
				this.warehouseshow1=false
				this.warehouseshow=false
			},
			//点击保存新建基本信息
			saveCgInfo(name){
				//console.log(this.soDetailList)
				this.$refs[name].validate((valid) => {
					if(valid){
						// if(this.soDetailList.length==0){
						// 	this.$notify({
						//         title:"",//
						//         message:'请选择发货商品！',
						//         type: 'error',
						//         position: 'bottom-right'
					 //        });
						// }else{
						// this.soDetailList.forEach((x)=>{
						// 	if(x.qty==0||x.qty>x.inventoryUp){
						// 		this.$notify({
						// 	        title:"",//
						// 	        message:'超出库存上限！或数量为0',
						// 	        type: 'error',
						// 	        position: 'bottom-right'
						//         });
						// 	}else{
								this.axios.post('/ship/add?uid=' + this.uid, {
									salesType:this.xiaoshouformValidate.salesType,//销售类型
				            		partnerName:this.xiaoshouformValidate.partnerName,//供应商名称
					            	partnerId:this.partnerId,//供应商id
									tel:this.tel,
									phone:this.phone,
									person:this.person,
									fax:this.fax,
					  				email:this.email,
					  				address:this.address,
					  				payType:this.xiaoshouformValidate.modeldztype,//支付方式
					  				deliverName:this.xiaoshouformValidate.deliverName,
					  				deliverTel:this.xiaoshouformValidate.deliverTel,
					  				deliverMobile:this.xiaoshouformValidate.deliverMobile,
					  				deliverAddress:this.deliverAddress,
					  				deliverProvince:this.deliverProvince,
					  				deliverCity:this.deliverCity,
					  				deliverCountry:this.deliverCountry,
									shipmentDetailVos:this.soDetailList,//发货明细
									recordDate :this.xiaoshouformValidate.recordDate ,//订单日期
									recordNo:this.recordNo,
									
									deliveryDate:this.deliveryDate,
									// shipQty:this.totalCount,
									// totalAmount:this.totalAmount,
									// totalCount:this.totalCount,
									// totalQty:this.soDetailList.length,
									remark:this.remark,
									warehouseName:this.xiaoshouformValidate.warehouseName,
									warehouseId:this.warehouseId,
									warehouseCode:this.warehouseCode,
									attachs:this.attridMore//多附件地址
								}).then((res) => {

										if(res.data.status=='200'){

											this.$notify({
										        title: '新建',
										        message: '新建成功',
										        type: 'success',
										        position: 'bottom-right'
									        });
									        this.addUnit()
											this.getcgListS()
											
									}else{
										this.$notify({
									        title:"",//
									        message: res.data.errorMessage,
									        type: 'error',
									        position: 'bottom-right'
								        });
									}
								})
							// }
						// })
						// }


					}
				})

				},
			// //设置收货日期
			shdate(date){
				this.deliveryDate = date

			},
			shdate1(date){
				this.recordDate = date

			},
			changeInput(){
				if(this.xiaoshouformValidate.partnerName==''){
					this.alertch1 = false;
					this.gysdata=[]
					return 
				}else{
					this.axios.get('/client/list?keyword='+this.xiaoshouformValidate.partnerName+'&uid=' + this.uid).then((res) => {
					let data = res.data;
					if(res.data.status == '200') {
						this.gysdata = data.rows;
						this.allgyslength = data.rows.length
						this.unitpageSize = data.pageSize;
						this.unittotal = data.total;
						this.alertch1 = true;
					}
				})
				}
			},
			//弹出框，获取客户列表--客户
			alertchModal(){
				
				this.shrdata=[]
				this.xiaoshouformValidate.deliverName=''
				this.alertch = true;
				this.getAllgysLists()
			},
			//弹框获取所有客户列表
			getAllgysLists(){
				this.axios.get('/client/list?uid=' + this.uid).then((res) => {
					let data = res.data;
					if(res.data.status == '200') {
						this.gysdata = data.rows;
						this.allgyslength = data.rows.length
						this.unitpageSize = data.pageSize;
						this.unittotal = data.total;
					}
				})
			},
			//刷新 获取往来单位列表--供应商
			reloadgys(){
				this.getAllgysLists()
			},
			//客户弹框出现后点击表格行数据
			gysrow(data,index){
				this.shyModeData=data
				this.partnerId =data.id
  			},
  			//双击
  			dblgysrow(){
  				this.makegys()
  			},
  			gysrow1(data){
  				this.xiaoshouformValidate.partnerName=data.name
				this.partnerId =data.id
				this.tel=data.tel//供应商电话
				this.phone=data.contractPhone//供应商手机
				this.fax=data.fax//供应商传真
				this.person=data.person//供应商联系人
  				this.email=data.email//联系人邮箱
  				this.address=data.address//联系人地址
				this.alertch = false
				this.alertch1 = false
  			},
			//选择客户弹框的确认按钮
			makegys(){
				this.xiaoshouformValidate.partnerName=this.shyModeData.name
				this.partnerId =this.shyModeData.id
				this.tel=this.shyModeData.tel//供应商电话
				this.phone=this.shyModeData.contractPhone//供应商手机
				this.fax=this.shyModeData.fax//供应商传真
				this.person=this.shyModeData.person//供应商联系人
  				this.email=this.shyModeData.email//联系人邮箱
  				this.address=this.shyModeData.address//联系人地址
				this.alertch = false
				this.alertch1 = false

				//接收地址
				this.deliverProvince=this.shyModeData.province
        		this.deliverCity=this.shyModeData.city
        		this.deliverCountry=this.shyModeData.district
        		this.deliverAddress=this.shyModeData.address
        		
				//默认第一条收货人信息
				this.xiaoshouformValidate.deliverName=this.shyModeData.contract
            	this.xiaoshouformValidate.deliverMobile=this.shyModeData.contractPhone
            	this.xiaoshouformValidate.deliverTel=this.shyModeData.contractTel
            
        		//转为code
        		if(this.deliverProvince==null || this.deliverProvince=='' || this.deliverCity==null|| this.deliverCity=='' || this.deliverCountry==null ||this.deliverCountry==''){
        			this.selectedOptions2=[]
        		}else{
        			this.selectedOptions2=[
            			this.TextToCode[this.deliverProvince].code,
            			this.TextToCode[this.deliverProvince][this.deliverCity].code,
            			this.TextToCode[this.deliverProvince][this.deliverCity][this.deliverCountry].code
            			]
        		}

			},
			//获取全部发货订单
			getcgList(s) {
				this.axios.get('/ship/query?uid=' + this.uid+'&status='+s).then((res) => {
					let data = res.data;
					if(res.data.status == '200') {
						this.Allpo = data.rows;
						this.pototal=data.total
						this.popageSize=data.pageSize
						this.Allpo.forEach((x,index)=>{
							x.check=false
							x.recordDate=new Date(x.recordDate).toLocaleDateString().replace(/\//g,'-')
							x.deliveryDate=new Date(x.deliveryDate).toLocaleDateString().replace(/\//g,'-')
							if(x.recordDate=='Invalid Date'){
								x.recordDate='未指定'
							}
							if(x.deliveryDate=='Invalid Date'){
								x.deliveryDate='未指定'
							}
						})
					}
				})
			},
			//获取全部发货订单
			getcgListS() {
				this.axios.get('/ship/query?uid=' + this.uid+'&status=1').then((res) => {
					let data = res.data;
					if(res.data.status == '200') {
						this.Allpo = data.rows;
						this.pototal=data.total
						this.popageSize=data.pageSize
						this.Allpo.forEach((x,index)=>{
							x.check=false
							x.recordDate=new Date(x.recordDate).toLocaleDateString().replace(/\//g,'-')
							x.deliveryDate=new Date(x.deliveryDate).toLocaleDateString().replace(/\//g,'-')
							if(x.recordDate=='Invalid Date'){
								x.recordDate='未指定'
							}
							if(x.deliveryDate=='Invalid Date'){
								x.deliveryDate='未指定'
							}
						})
						this.getcginfo(this.Allpo[0].id,0,{})
					}
				})
			},
			//获取商品属性
			getAllattr(){
				this.axios.get('skuspec/list?uid='+this.uid).then(res=>{
					this.attr=res.data.rows

				})
			},
			//单击存货表格一行弹出商品弹出框，并获取商品数据
			clickchrow(data,index){
				if(this.partnerId==''){
					this.$notify({
					        title:"",//
					        message: '请先选择客户',
					        type: 'error',
					        position: 'bottom-right'
				        });
				}else{//http://dev.zsydian.com:9033/ys/so/sku/客户编号  GET /client/sku/{id} 关联商品
					this.goodsinshow = true;
					this.axios.get('/client/sku/'+this.partnerId+'?uid='+this.uid).then((res)=>{
						this.goods= res.data.rows
						this.pageSize = res.data.pageSize
						this.total = res.data.total
						this.goods.forEach((x,index)=>{
		                  x.skuCode=this.goods[index].skuVo.skuCode
		                  x.skuId=this.goods[index].skuVo.id
		                  x.price=this.goods[index].skuVo.price
		                  x.costPrice=this.goods[index].skuVo.costPrice
		                  x.wholePrice=this.goods[index].skuVo.wholePrice
		                  x.unit=this.goods[index].skuVo.unit
		                  x.unitId=this.goods[index].skuVo.unitId
		                  x.className=this.goods[index].skuVo.className
		                  x.classId=this.goods[index].skuVo.classId
		                  x.inventoryUp=this.goods[index].skuVo.inventoryUp
		                  x.inventory=this.goods[index].skuVo.inventory
		                  x.barcode=this.goods[index].skuVo.barcode
		                  x.barnd=this.goods[index].skuVo.barnd
		                  x.mainPhoto=this.goods[index].skuVo.mainPhoto
		                  x.photos=this.goods[index].skuVo.photos
		                  x.unitList=this.goods[index].skuVo.unitList
		                  x.unitDesc=this.goods[index].skuVo.unitDesc
		                  x.attrDetailList=this.goods[index].skuVo.attrDetailList
		                  x.partnerId=this.goods[index].skuVo.id
		                  x.specs=this.goods[index].skuVo.specs
		                })
					})
				}
			},
			//商品弹框点击一行获取数据
			clickgoodsrow(data){
				console.log(data)
				this.rowgoodsData=data
				this.goodsid=data.skuId//选中商品的id
				this.goodsrow = data//选中商品一行的数据
				console.log(this.goodsrow)
				if(this.goodsrow.unitList!=undefined){
					this.sAttrsUnits=this.goodsrow.unitList//辅助单位
					//字符床拼接辅助属性
					let sName=[]
					this.sAttrsUnits.forEach((j,i)=>{
						sName.push(this.sAttrsUnits[i].unitName)
					})
					this.unitStr=sName.join(',')
				}
				if(this.goodsrow.attrDetailList!=null && this.goodsrow.attrDetailList.length!=0){
					// this.attr=res.data.rows.specs
					this.attrModel=true
					this.sAttrsData=this.goodsrow.attrDetailList//属性
					this.sAttrsData.forEach(x=>{
						x.qty=0
					})
				}
			},
			//点击规格一行
			clickAttrRow(data,index){
				this.rowIndex=index
				this.attrIdData=data
				console.log(data)
			},
			//属性取消
            modelCancelattr(){
            	this.attrModel=false
            	this.sAttrsData=[]
            	this.attrIdDataALL=[]
            	this.rowgoodsData={}
            	this.rowgoodsDataAll=[]
            },
            //全选
			mselectAll(data){
				this.attrIdDataALL=data
			},
			//选中项发生变化
			mchangeSelect(s){
				this.attrIdDataALL=s
			},
			 //子属性多选selection：已选项数据 //row：刚选择的项数据
			mSelected(selection,row){
				this.attrIdDataALL=selection
				console.log(this.attrIdData)
			},
			mcancel(selection,row){
				this.attrIdDataALL=selection
				for(var i = 0; i < this.attrIdDataALL.length; i++) {
                      if(this.attrIdDataALL[i].skuId == row.id) {
                       
                        this.attrIdDataALL.splice(j+1, 1)
                      }
                   
                  }
			},
            // //继续添加属性按钮
             cgtypeSureattr(){
             	this.sAttrsData.forEach(x=>{
             		if(x.qty>0){
             			let goodsarr={
								skuName:this.goodsrow.skuName,
								skuId:this.goodsrow.skuId,
								inventoryUp:this.goodsrow.inventoryUp,
								inventory:this.goodsrow.inventory,
								qty:x.qty,
								price:this.goodsrow.price,
								costPrice:this.goodsrow.costPrice,
								skucode:this.goodsrow.skuCode,
								barcode:this.goodsrow.barcode,
								unit:this.goodsrow.unit,
								wholePrice:this.goodsrow.wholePrice,
								skuPic:this.goodsrow.mainPhoto,
								skuTypeId:x.skuTypeId,//属性编号
								skuTypeDesc:x.skuTypeDesc,//属性描述
								salesPrice:this.goodsrow.price,
							}
							goodsarr['allprice']=Number(parseInt(goodsarr.qty))*Number(goodsarr.salesPrice)
							goodsarr['amount']=goodsarr['allprice']
							goodsarr['allprice'].toFixed(2)
							this.totalAmount=Number(parseInt(goodsarr.qty))*Number(goodsarr.salesPrice)
							this.cunhuodata.push(goodsarr)
							this.soDetailList.push(goodsarr)
							this.cgListInfo.push(goodsarr)
             		}
             	})
             	this.allCouunt=1
				this.attrsArr=[]
				this.rowgoodsDataAll=[]
				this.attrIdDataALL=[]
				this.attrIdData={}
				this.goodsrow={}
				this.rowgoodsData={}
				this.attrModel=false

            },
			// //继续添加属性按钮
   //           cgtypeSureattr(){
   //           	let arr = Object.keys(this.attrIdData)
   //           	if(arr.length==0){
   //           		this.attrModel=false
   //           	}else{
   //           		let goodsarr={
			// 			skuName:this.goodsrow.skuName,
			// 			skuId:this.goodsrow.skuId,
			// 			inventoryUp:this.goodsrow.inventoryUp,
			// 			inventory:this.goodsrow.inventory,
			// 			qty:Number(this.allCouunt),
			// 			price:this.goodsrow.price,
			// 			costPrice:this.goodsrow.costPrice,
			// 			skucode:this.goodsrow.skuCode,
			// 			unit:this.goodsrow.unit,
			// 			wholePrice:this.goodsrow.wholePrice,
			// 			skuPic:this.goodsrow.mainPhoto,
			// 			skuTypeId:this.attrIdData.id,//属性编号
			// 			skuTypeDesc:this.attrIdData.skuTypeDesc,//属性描述
			// 			// salesPrice:Number(this.salesPrice),
			// 			salesPrice:this.goodsrow.price,
			// 			remark:this.goodsrow.remark
			// 		}
			// 		goodsarr['allprice']=Number(parseInt(goodsarr.qty))*Number(goodsarr.salesPrice)
			// 		goodsarr['amount']=goodsarr['allprice']
			// 		goodsarr['allprice'].toFixed(2)
			// 		this.cunhuodata.push(goodsarr)
			// 		this.soDetailList.push(goodsarr)
			// 		//计算初始总价
			// 		this.totalAmount+=goodsarr['allprice']
			// 		//计算初始数量
			// 		this.totalCount+=Number(this.allCouunt)
			// 		this.$refs.sel.forEach((item,index)=>{
	  //     				item.clearSingleSelect()
	  //     			})
	      			
			// 		this.allCouunt=1
			// 		this.attrsArr=[]
			// 		this.attrIdData={}
   //           	}
   //          },
            //shuangji
            dblclickgoodsrow(){
            	this.makegoods()
            },
            //选中项发生变化
			changeSelect(s){
				this.rowgoodsDataAll=s
				console.log(this.rowgoodsDataAll)
			},
			//商品多选
			selectGoods(data,rows){
				this.rowgoodsDataAll=data
				// this.axios.get('/inventory/viewsku/'+row.skuId+'?uid='+this.uid).then(res=>{
					// if(res.data.status==200){
						this.goodsrow =rows//选中商品一行的数据GET /sku/get/{id} 详情
						if(rows.unitList!=null || rows.unitList!=undefined){
							this.sAttrsUnits=rows.unitList//辅助单位
							this.goodsrow.unitList.push({
								skuId:rows.id,
								unitName:rows.unit
							})
							for(var i = 0; i < this.sAttrsUnits.length - 1; i++) {
			                    for(var j = i+1; j < this.sAttrsUnits.length; j++) {
			                      if(this.sAttrsUnits[i].unitName == this.sAttrsUnits[j].unitName) {
			                        this.sAttrsUnits.splice(j, 1)
			                      }
			                    }
			                  }
							//属性显示的辅助单位
							let sName=[]
							this.sAttrsUnits.forEach((j,i)=>{
								sName.push(this.sAttrsUnits[i].unitName)
							})
							this.unitStr=sName.join(',')
						}else{
							this.sAttrsUnits.push({
								skuId:rows.id,
								unitName:rows.unit
							})
						}

						if(rows.attrDetailList!=null && rows.attrDetailList.length!=0){
							this.attrModel=true
							this.sAttrsData=rows.attrDetailList//属性
							this.sAttrsData.forEach(x=>{
								x.qty=0
							})
						}

					// }
				// })
			},
			//全选
			selectAll(data){
				if(this.rowgoodsDataAll.length==0){
					this.rowgoodsDataAll=data
				}else{
					this.rowgoodsDataAll.concat(data)
				}
			},
			//selection：已选项数据row：取消选择的项数据
			cancelGoods(selection,row){
				this.rowgoodsDataAll=selection
				for(var i = 0; i < this.rowgoodsDataAll.length; i++) {
                      if(this.rowgoodsDataAll[i].skuId == row.id) {
                       
                        this.rowgoodsDataAll.splice(j+1, 1)
                      }
                   
                  }
			
			},
            //选择商品弹框的确认按钮
			makegoods(){
				let arr1 = Object.keys( this.rowgoodsData);//判断对象是否为空
				if(this.rowgoodsDataAll.length!=0){
					this.rowgoodsDataAll.forEach((x,index)=>{
							let arr={
								skuName:this.rowgoodsDataAll[index].skuName,
								skuId:this.rowgoodsDataAll[index].skuId,
								inventoryUp:this.rowgoodsDataAll[index].inventoryUp,
								inventory:this.rowgoodsDataAll[index].inventory,
								qty:Number(this.allCouunt),
								price:this.rowgoodsDataAll[index].price,
								costPrice:this.rowgoodsDataAll[index].costPrice,
								skucode:this.rowgoodsDataAll[index].skuCode,
								barcode:this.rowgoodsDataAll[index].barcode,
								unit:this.rowgoodsDataAll[index].unit,
								unitId:this.rowgoodsDataAll[index].unitId,
								wholePrice:this.rowgoodsDataAll[index].wholePrice,
								salesPrice:this.rowgoodsDataAll[index].price,
								unitList:this.rowgoodsDataAll[index].unitList,
								skuTypeId:"",//属性编号
								skuTypeDesc:"",//属性描述
								// receiptQty:Number(this.allCouunt),
								skuPic:this.rowgoodsDataAll[index].mainPhoto,
							}
							arr['allprice']=Number(parseInt(arr.qty))*Number(arr.salesPrice)
							arr['amount']=Number(parseInt(arr.qty))*Number(arr.salesPrice)
							arr['allprice'].toFixed(2)
							arr['amount'].toFixed(2)
							this.cunhuodata.push(arr)
							this.soDetailList.push(arr)
							this.cgListInfo.push(arr)
						
					})
						this.goodsinshow = false
						this.rowgoodsDataAll=[]
						this.rowgoodsData={}
						this.goodsrow={}
						this.sAttrsData=[]
						this.allCouunt=1
						this.attrsArr=[]
						this.attrIdData={}
				
				}else if(arr1.length!=0){
					let arr={
						skuName:this.rowgoodsData.skuName,
						skuId:this.rowgoodsData.skuId,
						inventoryUp:this.rowgoodsData.inventoryUp,
						inventory:this.rowgoodsData.inventory,
						qty:Number(this.allCouunt),
						price:this.rowgoodsData.skuVo.price,
						costPrice:this.rowgoodsData.skuVo.costPrice,
						skucode:this.rowgoodsData.skuCode,
						barcode:this.rowgoodsData.barcode,
						unit:this.rowgoodsData.skuVo.unit,
						unitId:this.rowgoodsData.skuVo.unitId,
						wholePrice:this.rowgoodsData.skuVo.wholePrice,
						salesPrice:this.rowgoodsData.skuVo.price,
						unitList:this.rowgoodsData.skuVo.unitList,
						skuTypeId:"",//属性编号
						skuTypeDesc:"",//属性描述
						// receiptQty:Number(this.allCouunt),
						skuPic:this.rowgoodsData.mainPhoto,
					}
					arr['allprice']=Number(parseInt(arr.qty))*Number(arr.salesPrice)
					arr['amount']=Number(parseInt(arr.qty))*Number(arr.salesPrice)
					arr['allprice'].toFixed(2)
					arr['amount'].toFixed(2)
					this.cunhuodata.push(arr)
					this.soDetailList.push(arr)
					this.cgListInfo.push(arr)

					this.rowgoodsData={}
					this.goodsinshow = false
				}else{
					this.goodsinshow = false
				}
				
				
			},
			//选择商品弹框的确认按钮
			// makegoods(){
			// 	let arr = Object.keys( this.rowgoodsData);//判断对象是否为空
			// 		if(arr.length==0){
			// 		this.goodsinshow=false
			// 	}else if(this.sAttrsData.length==0){
			// 		this.attrModel=false
			// 		let goodsarr={
			// 			skuName:this.goodsrow.skuName,
			// 			skuId:this.goodsrow.id,
			// 			inventoryUp:this.goodsrow.inventoryUp,
			// 			inventory:this.goodsrow.inventory,
			// 			qty:Number(this.allCouunt),
			// 			price:this.goodsrow.price,
			// 			costPrice:this.goodsrow.costPrice,
			// 			skucode:this.goodsrow.skuCode,
			// 			unit:this.goodsrow.unit,
			// 			unitId:this.goodsrow.unitId,
			// 			wholePrice:this.goodsrow.wholePrice,
			// 			salesPrice:this.goodsrow.price,
			// 			unitList:this.goodsrow.unitList,
			// 			skuTypeId:"",//属性编号
			// 			skuTypeDesc:"",//属性描述
			// 			// receiptQty:Number(this.allCouunt),
			// 			skuPic:this.goodsrow.mainPhoto,
			// 		}
			// 		goodsarr['allprice']=Number(parseInt(goodsarr.qty))*Number(goodsarr.salesPrice)
			// 		goodsarr['amount']=Number(parseInt(goodsarr.qty))*Number(goodsarr.salesPrice)
			// 		goodsarr['allprice'].toFixed(2)
			// 		goodsarr['amount'].toFixed(2)
			// 		this.cunhuodata.push(goodsarr)
			// 		this.soDetailList.push(goodsarr)
			// 		this.attrsArr=[]
			// 		this.attrIdData=[]
			// 		this.rowgoodsData=[]
			// 		//清空选择框选中数据
			// 		this.allCouunt=1
			// 		this.goodsinshow = false
			// 		let resultqty=0
			// 		let resultPrice=0
			// 		for(let i=0;i<this.soDetailList.length;i++){
			// 			resultqty+=parseInt(this.soDetailList[i].qty)
			// 			resultPrice+=Number(this.soDetailList[i].allprice)
			// 		}
			// 	}
				
			// },
			
			//删除一行已选定的商品数据
			remove (index) {
				this.cunhuodata.splice(index, 1);
				this.soDetailList.splice(index, 1);
			},
			
			
			//仓库弹框
			warehouseModal(){
				this.warehouseshow =true
			},
			makeck(){
				this.warehouseshow=false
			},
			//点击修改
			xiugaiedit(){
				this.$refs.divsave.style.display="none"
				this.$refs.detail.style.display="none"//详情页面
				this.$refs.edit.style.display="block"//修改
				this.addText = false
				this.editshow = true
				this.xiugaishow=false
				this.sh=false
				this.qs=false
				this.zf=false//作废
				this.fileBtn=true//附件按钮
				this.cancelxiu=false
				//获取采购订单详情上方
				this.axios.get('/ship/get/'+this.id+'?uid='+this.uid).then((res)=>{
					//////console.log.log(res.data)
					if(res.data.status==200){
						let data = res.data.rows
					
							this.upData=data.fileList//附件列表
							this.upData1=data.fileList//修改附件列表
							this.xiaoshouformValidate.partnerName=data.partnerName//供应商名称
			            	this.partnerId=data.partnerId//供应商id
							this.tel=data.deliverTel
							this.phone=data.phone
							this.fax=data.fax
			  				this.email=data.email
			  				this.address=data.address
			  				this.xiaoshouformValidate.deliverName=data.deliverName
			  				this.xiaoshouformValidate.deliverTel=data.deliverTel
			  				this.xiaoshouformValidate.deliverMobile=data.deliverMobile
			  				this.deliverAddress=data.deliverAddress
							// this.logistics=data.logistics//物流公司
							// logisticsNo:this.logisticsNo,//物流编号
							this.xiaoshouformValidate.salesType=data.salesType
							this.recordDate=data.recordDate //订单日期
							this.xiaoshouformValidate.recordNo=data.recordNo
							this.totalAmount=data.totalAmount
							this.totalCount=data.totalCount
							this.xiaoshouformValidate.modeldztype=data.payType//支付类型
							this.deliveryDate=data.deliveryDate
							this.attridMore=data.attachs
							//修改附件的链接
							let strvalue=[]//id链接
							if(this.upData==null){//判断是否有附件
								this.upData=[]
							}else{
								for(let i =0;i<this.upData.length;i++){
									if(this.upData[i].key==''){
										this.upData.splice(i,1)
									}else{
										strvalue.push(this.upData[i].key.key)
									}
								}
								let s1 = strvalue.join(',')
								this.attridMore = s1//id链接后字符串
							
							}
						

					}
				})
				//获取采购订单明细下方
				this.axios.get('/ship/detail/'+this.id+'?uid='+this.uid).then((res)=>{

					if(res.data.status==200){
						if(res.data.rows.length==0){
							this.soDetailList=[{skuName:this.$t('operation.yhqHome.choosesku'),amount:0,qty:0,salesPrice:0,allprice:0}]//'选择商品'
						}else{
							let row = res.data.rows
							this.soDetailList = row
							console.log(this.soDetailList)
							this.soDetailList.forEach((item,index)=>{
								
								item['allprice'] =item.salesPrice*item.qty
								item.soId=this.id
								item.detailId=this.id
								
							})
						}
						
					}
				})

			},
			//保存修改
			saveEdit(){
				this.axios.put('ship/update?uid='+this.uid,{
					id:this.id,
					salesType:this.xiaoshouformValidate.salesType,//销售类型
            		partnerName:this.xiaoshouformValidate.partnerName,//供应商名称
	            	partnerId:this.partnerId,//供应商id
					tel:this.tel,
					phone:this.phone,
					person:this.person,
					fax:this.fax,
	  				email:this.email,
	  				address:this.address,
	  				payType:this.type,
	  				deliverName:this.xiaoshouformValidate.deliverName,//收货人
	  				deliverTel:this.xiaoshouformValidate.deliverTel,
	  				deliverMobile:this.xiaoshouformValidate.deliverMobile,
	  				deliverAddress:this.deliverAddress,
					// soDetailList:this.soDetailList,//发货明细
					shipmentDetailVos:this.soDetailList,//发货明细
					deliverAddress:this.deliverAddress,
	  				deliverProvince:this.deliverProvince,
	  				deliverCity:this.deliverCity,
	  				deliverCountry:this.deliverCountry,
					// shipQty:this.totalCount,
					// totalQty:this.totalQty,//采购数量
					// deliveryQty:this.deliveryQty,//已发运数量
					// logistics:this.logistics,//物流公司
					// logisticsNo:this.logisticsNo,//物流编号
					recordDate :this.xiaoshouformValidate.recordDate,//订单日期
					recordNo:this.recordNo,
					totalAmount:this.totalAmount,
					totalCount:this.totalCount,
				
					deliveryDate:this.deliveryDate,
					remark:this.remark,
					attachs:this.attridMore,//多附件地址
					warehouseName:this.xiaoshouformValidate.warehouseName,
					warehouseId:this.warehouseId,
					warehouseCode:this.warehouseCode,
				}).then((res)=>{
					if(res.data.status=='200'){
						this.$notify({
					        title:"",//
					        message: '修改信息成功',
					        type: 'success',
					        position: 'bottom-right'
				        });
						this.addUnit()
						this.getcgList(this.valueT)
						this.type=1
						this.address=''//发货人地址
						this.xiaoshouformValidate.deliverName=''//收货方名称
						this.deliverAddress=''
						this.xiaoshouformValidate.deliverTel=''//收货人电话
						this.xiaoshouformValidate.deliverMobile=''//收货人手机
            			this.soDetailList=[]//采购明细
            			this.cunhuodata=[]//采购明细
            			//仓库
	            		this.warehouseName=''//仓库名
	            		this.warehouseCode=''//仓库编号
	            		this.warehouseId=''//仓库名id

	            		this.partnerName=''//供应商名称
		            	this.partnerId=''//供应商id
						this.recordNo=''//单号
						// totalQty:this.totalQty,//采购数量
						this.deliveryQty=''//已发运数量
						this.logistics=''//物流公司
						this.logisticsNo=''//物流编号
						this.tel=''
						this.recordDate =new Date().toLocaleDateString().replace(/\//g,'-')//订单日期
						this.recordNo=''
						this.totalAmount=0
						this.totalCount=0
						this.deliveryDate=''
						this.salesPrice=0
						this.remark=''
						this.cunhuodata=[{skuName:'选择商品',allprice:0}]
						this.model2=""
						this.xiaoshouformValidate.warehouseName=''
						this.warehouseId=''
						this.warehouseCode=''
					}else{
						this.$notify({
							title:"",//
							message: res.data.errorMessage,
							type: 'error',
							position: 'bottom-right'
						});
					}
				})
			},
			//刪除
			delcg(){
				this.$Modal.confirm({
                    title: '删除',
                    content: '<p>确定要删除吗?</p>',
                    onOk: () => {
                        this.axios.delete('/ship/delete/'+this.orderStr+'?uid=' + this.uid).then((res) => {
                            if(res.data.status == 200) {
                                this.$notify({
	                                title:"",//
	                                    message: this.$t('public.deleteSuccess'),//
	                                    type: 'success',
	                                    position: 'bottom-right'
	                                });
                               	this.getcgList(this.valueT)
								this.orderStr=''
								this.orderStrArr=[]
                            }else{
                            	this.$notify({
									title:"",//
									message: res.data.errorMessage,
									type: 'error',
									position: 'bottom-right'
								});
                            }
                        })
                    }
                });
					
			},
			//提交发货订单
			examine(){
				this.$Modal.confirm({
                    title: '审核',
                    content: '<p>确定要审核吗?</p>',
                    onOk: () => {
                        this.axios.get('ship/submit/'+this.id+'?uid='+this.uid).then((res)=>{
							if(res.data.status==200){
								this.$notify({
							        title: '',
							        message: '审核成功',
							        type: 'success',
							        position: 'bottom-right'
						        });
									this.editshow=false
									this.sh=false
									this.qs=false
									this.zf=false
									this.dy=false
									this.wc=false
									this.xiugaishow=false
									this.deliveryshow=false
									this.shipmentshow=false
									this.packageshow=true
								this.getcginfo(this.id,this.numIndex,{})
								this.getcgList(this.valueT)
							}else {
		            			this.$notify({
							        title:"",//
							        message: res.data.errorMessage,
							        type: 'error',
							        position: 'bottom-right'
						        });
							}
						})
                    }
                });
				
			},
			//打包
			package(){
				this.axios.get('/ship/package/'+this.id+'?uid='+this.uid).then(res=>{
					if(res.data.status==200){
	        			this.$notify({
					        title: '',
					        message: '打包完成',
					        type: 'success',
					        position: 'bottom-right'
				        });
				        this.packageshow=false//打包
				        this.sh=false//提交
	        			this.getcgList(this.valueT)
						this.getcginfo(this.id,this.numIndex,{})
					}else{
						this.$notify({
					        title:"",//
					        message: res.data.errorMessage,
					        type: 'error',
					        position: 'bottom-right'
				        });
					}
				})
			},
			//装运完成
			shipment(){
				this.axios.get('/ship/shipment/'+this.id+'?uid='+this.uid).then(res=>{
					if(res.data.status==200){
	        			this.$notify({
					        title: '',
					        message: '装运完成',
					        type: 'success',
					        position: 'bottom-right'
				        });
				        this.packageshow=false//打包
				        this.sh=false//提交
				        this.shipmentshow=false//装运
	        			this.getcgList(this.valueT)
						this.getcginfo(this.id,this.numIndex,{})
					}else{
						this.$notify({
					        title:"",//
					        message: res.data.errorMessage,
					        type: 'error',
					        position: 'bottom-right'
				        });
					}
				})
			},
			//物流登记
			delivery(){
				this.pkisshow=true
			},
			//物流取消
			cancelSearchpk(){
				this.pkisshow=false
				this.logisticsformValidate.logisticsNo1=''
				this.logisticsformValidate.model2=''
				this.logisticsformValidate.logistics=''
			},
			//物流确认
			sureSearchpk(name){
				this.$refs[name].validate((valid) => {
					if(valid){
						this.axios.get('/ship/delivery/'+this.id+'?logistics='+this.logisticsformValidate.logistics+'&logisticsNo='+this.logisticsformValidate.logisticsNo1+'&uid='+this.uid).then(res=>{
							if(res.data.status==200){
			        			this.$notify({
							        title: '',
							        message: '物流登记完成',
							        type: 'success',
							        position: 'bottom-right'
						        });
						        this.logisticsformValidate.logisticsNo1=''
						        this.logisticsformValidate.logistics=''
						        this.pkisshow=false
			        			this.getcgList(this.valueT)
								this.getcginfo(this.id,this.numIndex,{})
							}else{
								this.$notify({
							        title:"",//
							        message: res.data.errorMessage,
							        type: 'error',
							        position: 'bottom-right'
						        });
							}
						})
					}
				})

			},
			//发货完成
			allsign(){
				this.axios.get('ship/confirm/'+this.id+'?uid='+this.uid).then((res)=>{
					if(res.data.status==200){
						this.$notify({
					        title: '',
					        message: '发货完成',
					        type: 'success',
					        position: 'bottom-right'
				        });
						this.getcgList(this.valueT)
						this.getcginfo(this.id,this.numIndex,{})
						// this.qs=false
						// this.sh=false
						// this.dy=true
						this.xiugaishow=false
					}else{
						this.$notify({
					        title:"",//
					        message: res.data.errorMessage,
					        type: 'error',
					        position: 'bottom-right'
				        });
					}
				})
			},
			//弃审
			cancelOrder(){
				this.$Modal.confirm({
                    title: '弃审',
                    content: '<p>确定要弃审吗?</p>',
                    onOk: () => {
                        this.axios.get('ship/cancel/'+this.id+'?uid='+this.uid).then((res)=>{
							if(res.status==200){
								this.$notify({
							        title: '',
							        message: '已弃审',
							        type: 'success',
							        position: 'bottom-right'
						        });
								this.getcgList(this.valueT)
							}else {
								this.$notify({
							        title:"",//
							        message: res.data.errorMessage,
							        type: 'error',
							        position: 'bottom-right'
						        });
							}
						})
                    }
                });
				
			},

			//作废
			invalid(){
				this.$Modal.confirm({
                    title: '作废',
                    content: '<p>确定要作废吗?</p>',
                    onOk: () => {
                        this.axios.get('ship/invalid/'+this.id+'?uid='+this.uid).then((res)=>{
							if(res.data.status==200){
									this.$notify({
								        title: '',
								        message:  '已作废',
								        type: 'success',
								        position: 'bottom-right'
							        });
									this.getcgList(this.valueT)
									this.editshow=false
									this.sh=false
									this.qs=false
									this.zf=false
									this.dy=false
									this.wc=false
									this.xiugaishow=false
									this.deliveryshow=false
									this.shipmentshow=false
									this.packageshow=false

								}else{

		                			this.$notify({
								        title:"",//
								        message:  res.data.errorMessage,
								        type: 'error',
								        position: 'bottom-right'
							        });
								}
						})
                    }
                });
				
			},
			//打包弹框选择物流
			getlogistics1(data){
				this.logisticsformValidate.model2 = data.value
				this.logisticsformValidate.logistics = data.label
				//console.log(value)
			},
			//客户模糊搜索
			getgysKeyword(){
				this.axios.get('client/list?keyword='+this.gyskeyword+'&uid='+this.uid).then((res)=>{

					if(res.data.status==200){
						this.gysdata = res.data.rows
					}
				})

			},
			//查询客户
			searkh(){
				this.getgysKeyword()
			},
			  //商品模糊搜索
            searchInput(){
				this.axios.get('client/sku/'+this.partnerId+'?keyword='+this.goodskeyword+'&uid='+this.uid).then((res)=>{

					if(res.data.status==200){
						this.goods = res.data.rows
						this.total=res.data.total
						this.pageSize1=res.data.pageSize
					}
				})

            },
            //回车搜索商品
           enterSearch(){
           	this.searchInput()
           },
            //获取日志记录
            getshjl(id){
	        	this.axios.get('/ship/log?id='+id+'&uid='+this.uid).then((res)=>{

					if(res.data.status==200){
						this.chreceipt = res.data.rows
						this.total2=res.data.total
						this.pageSize2=res.data.pageSize
						this.chreceipt.forEach((x)=>{
							// this.gesjc(x.createTime)

						x.createTime=new Date(x.createTime).toLocaleString().replace(/\//g,'-')
						})
					}

				})
            },
            //GET /ship/detail/{id} 出库明细
            getmx(){
            	this.axios.get('ship/detail/'+this.id+'?uid='+this.uid).then(res=>{
						if(res.data.status==200){
							this.cgListInfo=res.data.rows
							this.cktotal1=res.data.total
              				this.ckpageSize1=res.data.pageSize
              				this.cgListInfo.forEach(x=>{
              					x.createTime=this.getLocalTime(x.createTime)
              				})
						}
					})
            },
           //出库明细切换一条页
            ckgetData1(current){
                this.axios.get('/ship/detail/'+this.id+'?offset='+current+'&uid='+this.uid).then((res)=>{
              		if(res.data.status==200){
              			this.cgListInfo=res.data.rows
              			this.cktotal1=res.data.total
              			this.ckpageSize1=res.data.pageSize
              			this.cgListInfo.forEach(x=>{
              					x.createTime=this.getLocalTime(x.createTime)
              				})
              		}

                })
            },
            //出库明细翻页
           ckchangePageSize1(size){
                this.ckpageSize1 = size
            },
			//添加下边框 请求收货记录
			addborder(index){
				this.num2 = index
				if(this.num2==0){
					this.getmx()
				}
				//分配明细
				if(this.num2==1){
					this.axios.get('ship/allocate/'+this.id+'?uid='+this.uid).then(res=>{
						if(res.data.status==200){
							this.fpListInfo=res.data.rows
							this.fptotal1=res.data.total
              				this.fppageSize1=res.data.pageSize
              				this.fpListInfo.forEach(x=>{
              					x.createTime=this.getLocalTime(x.createTime)
              				})
						}
					})
				}
				//index为1点击了收货记录
				if(this.num2==2){
					this.getshjl(this.id)
				}

			},
			//分配明细切换一条页
            fpgetData1(current){
                this.axios.get('/ship/allocate/'+this.id+'?offset='+current+'&uid='+this.uid).then((res)=>{
              		if(res.data.status==200){
              			this.fpListInfo=res.data.rows
              			this.fptotal1=res.data.total
              			this.fppageSize1=res.data.pageSize
              			this.fpListInfo.forEach(x=>{
              					x.createTime=this.getLocalTime(x.createTime)
              				})
              		}

                })
            },
            //分配明细翻页
            fpchangePageSize1(size){
                this.fppageSize1 = size
            },
			
			

            modelCancel(){
            	this.warehouseshow = false
            	this.alertch = false
            	this.cgtypeisshow = false
            	this.goodsinshow = false
            	// this.attrModel = false
            },

            //下拉加载更多
            handleReachEdge(){
            	this.current++//默认10条
    	 		this.axios.get('/ship/query?offset='+this.current+'&uid='+this.uid+'&status='+this.valueT).then((res)=>{

	 				if(this.current>Math.ceil(this.pototal/this.popageSize)){
                        this.current=Math.ceil(this.pototal/this.popageSize)
                    }

			 		res.data.rows.forEach((item)=>{
			 			item.recordDate=new Date(item.recordDate).toLocaleDateString().replace(/\//g,'-')
							item.deliveryDate=new Date(item.deliveryDate).toLocaleDateString().replace(/\//g,'-')
							if(item.recordDate=='Invalid Date'){
								item.recordDate='未指定'
							}
							if(item.deliveryDate=='Invalid Date'){
								item.deliveryDate='未指定'
							}
			 			this.Allpo.push(item)
			 			// //console.log(this.Allpo)
			 			this.Allpo.forEach((x,index)=>{
			 				x.check=false
							x.recordDate=new Date(x.recordDate).toLocaleDateString().replace(/\//g,'-')
							x.deliveryDate=new Date(x.deliveryDate).toLocaleDateString().replace(/\//g,'-')
							if(x.recordDate=='Invalid Date'){
								x.recordDate='未指定'
							}
							if(x.deliveryDate=='Invalid Date'){
								x.deliveryDate='未指定'
							}
						})
						this.currnetisshow=true

			 		})

			 	})

            },
            //支付类型
            getpaytype(){
            	this.axios.get('paytype/query?length=99&uid='+this.uid).then(res=>{
            		if(res.data.status==200){
            			this.dztype=res.data.rows
            			//console.log(res.data.rows)
            		}
            	})
            },
            //获取支付类型
            getdztype(value){
            	this.xiaoshouformValidate.modeldztype = value

            },
            // getcgDZtype(value){
            // 	this.type = value
            // },
            cgDZModal(){
            	this.cgDZisshow=true
            },
            //点击差号回到首页
            cancelHome(){
            	this.$router.push('salespage')
            },
            //选择销售类型
            getcgType(value){
            	this.xiaoshouformValidate.salesType = value.value
            	////console.log(value)
            },


            

            //获取所有销售类型列表
            getAllcgType(){
            	this.axios.get('sotype/query?length=99&uid='+this.uid).then((res)=>{
            		if(res.data.status==200){
            			////////console.log(res.data.rows)
            			res.data.rows.forEach((item,index)=>{
            				let arr={
            					value:res.data.rows[index].key,
            					label:res.data.rows[index].title
            				}
            				this.datacgList.push(arr)
            				//////console.log(this.datacgList)
            			})
            		}
            	})
            },
          //客户翻页
           //切换一条页
            getunitData(current){
                this.axios.get('/client/list?offset='+current+'&uid='+this.uid).then((res)=>{
                    //////console.log(res)
                    this.gysdata = res.data.rows

                })
            },
            //翻页
            changeunitPageSize(size){
                this.unitpageSize = size
            },
            //客户地址翻页
           //切换一条页
            getshrData(current){
                this.axios.get('/clienta/query?offset='+current+'&uid='+this.uid).then((res)=>{
                   this.shrdata=res.data.rows
					this.shrtotal=res.data.total
					this.shrpageSize=res.data.pageSize

                })
            },
            //翻页
            changeshrPageSize(size){
                this.shrpageSize = size
            },
            //下拉框选择
			orderselected(value){
				this.valueT = value
				this.getcgList(this.valueT)
			},
			 //切换一条页
            getData(current){
                this.axios.get('/client/sku/'+this.partnerId+'?offset='+current+'&uid='+this.uid).then((res)=>{
              		if(res.data.status==200){
              			this.goods = res.data.rows
              			this.total=res.data.total
              			this.pageSize=res.data.pageSize
              			this.goods.forEach((x,index)=>{
		                  x.skuCode=this.goods[index].skuVo.skuCode
		                  x.skuId=this.goods[index].skuVo.id
		                  x.price=this.goods[index].skuVo.price
		                  x.costPrice=this.goods[index].skuVo.costPrice
		                  x.wholePrice=this.goods[index].skuVo.wholePrice
		                  x.unit=this.goods[index].skuVo.unit
		                  x.unitId=this.goods[index].skuVo.unitId
		                  x.className=this.goods[index].skuVo.className
		                  x.classId=this.goods[index].skuVo.classId
		                  x.inventoryUp=this.goods[index].skuVo.inventoryUp
		                  x.inventory=this.goods[index].skuVo.inventory
		                  x.barcode=this.goods[index].skuVo.barcode
		                  x.barnd=this.goods[index].skuVo.barnd
		                  x.mainPhoto=this.goods[index].skuVo.mainPhoto
		                  x.photos=this.goods[index].skuVo.photos
		                  x.unitList=this.goods[index].skuVo.unitList
		                  x.unitDesc=this.goods[index].skuVo.unitDesc
		                  x.attrDetailList=this.goods[index].skuVo.attrDetailList
		                  x.partnerId=this.goods[index].skuVo.id
		                  x.specs=this.goods[index].skuVo.specs
		                })
              		}

                })
            },
            //翻页
            changePageSize(size){
                this.pageSize = size
            },
             //点击取消回到详情
            showDetail(){
            	this.$refs.detail.style.display="block"
            	this.$refs.edit.style.display="none"//修改
            	this.$refs.divsave.style.display="none"//保存按钮
            	this.getcginfo(this.Allpo[0].id,0,{})
            	 // this.getDefaultAnddetails(this.Allpo[0].id)

            	 this.addText = false
            },
             //上传之前类型之前
            beforeAvatarUpload(file){

               var fileName=new Array()
                fileName =file.name.split('.');

                const isLt2M = file.size / 1024 / 1024 < 20
  
                if (!isLt2M) {
					this.$notify({
				        title:"",//
				        message: '上传文件大小不能超过 20MB!',
				        type: 'error',
				        position: 'bottom-right'
			        });

                }

              return isLt2M

            },

              //文件上传时
            upProgress(event, file, fileList){
            	if(file.status=='uploading'){
            		this.soe=true
            	}

            },
              //成功后的会掉
            success(response, file, fileList){
                if(response.status==200){

                   //判断后缀名
                   this.soe=false
                   	var index1=file.name.lastIndexOf(".");
                  	var index2=file.name.length;
                   	var postf=file.name.substring(index1,index2)
                  	// ////console.log(postf)
                   let arr={
                   		name:file.name,
                   		type:file.raw.type,
                   		url:file.url,
                   		t:postf,
                   		key:response.rows
                   }
                   this.upData.push(arr)
                   ////console.log(this.upData)
                  	this.upData.forEach((x,index)=>{
                  		if(this.upData[index].t=='.txt'){
                  			this.upData[index].url="http://img.zsydian.com/icon/cg_bg1.png"
                  		}
                  		if(this.upData[index].t=='.xls' || this.upData[index].t=='.xlsx'){
                  			this.upData[index].url="http://img.zsydian.com/icon/cg_bg2.png"
                  		}
                  		if(this.upData[index].t=='.docx'){
                  			this.upData[index].url="http://img.zsydian.com/icon/cg_bg_docx.png"
                  		}

                  		if(this.upData[index].t=='.png' || this.upData[index].t=='.jpg' || this.upData[index].t=='.jpeg'){
                  			this.upData[index].url=this.upData[index].url
                  		}
                  		if(this.upData[index].t!='.jpeg' && this.upData[index].t!='.png'  && this.upData[index].t!='.jpg'  && this.upData[index].t!='.txt'  && this.upData[index].t!='.xls'  && this.upData[index].t!='.docx'  && this.upData[index].t!='.xlsx'){
                  			this.upData[index].url='http://img.zsydian.com/icon/bg_sku_img.png'
                  		}
                  	})
                  	let strvalue=[]//id链接

					for(let i =0;i<this.upData.length;i++){
						if(this.upData[i].key==''){
							this.upData.splice(i,1)
						}else{
							strvalue.push(this.upData[i].key.key)

						}

					}
					let s1 = strvalue.join(',')
					this.attridMore = s1//id链接后字符串
					////console.log(this.attrid)

                }else{

                     this.$notify({
				        title:"",//
				        message: response.errorMessage,
				        type: 'error',
				        position: 'bottom-right'
			        });
                }
            },
              //移动到差号
            chaOver(item,index){

            	this.chaIndex=index
            },
             //离开差号
            chleave(){
            	this.chaIndex=-1
            },
            //点击差号删除POST /file/action/delete
            delUp(item,index){
            	this.upData.splice(index,1)
            	let strvalue=[]//id链接

				for(let i =0;i<this.upData.length;i++){
					if(this.upData[i].key==''){
						this.upData.splice(i,1)
					}else{
						strvalue.push(this.upData[i].key.key)

					}

				}
				let s1 = strvalue.join(',')
				this.attridMore = s1//id链接后字符串
            	this.axios.post('/file/action/delete?key='+item.rows+'&uid='+this.uid).then(res=>{
            		if(res.data.status==200){

            		}
            	})
            },
             //精准搜搜点击搜索
            searchdd(){
                this.axios.get('/ship/query?keyword='+this.searchKeyword+'&uid=' + this.uid).then((res) => {
                    if(res.data.status==200){
                        let data = res.data;
                        this.Allpo = data.rows;
                        this.pototal=data.total
						this.popageSize=data.pageSize
                        this.Allpo.forEach((x,index)=>{
                        	x.check=false
                            x.recordDate=new Date(x.recordDate).toLocaleDateString().replace(/\//g,'-')
							x.deliveryDate=new Date(x.deliveryDate).toLocaleDateString().replace(/\//g,'-')
							if(x.recordDate=='Invalid Date'){
								x.recordDate='未指定'
							}
							if(x.deliveryDate=='Invalid Date'){
								x.deliveryDate='未指定'
							}
                        })
                    }
                })
            },

            //回车搜索
            enterSearchdd(){
                this.searchdd()
            },
             //精准搜索
            searchLocation(){
              this.psisshow=true
            },
             //单据日期
            shdatepoDate(date){
            	this.poDate=date
            },
            // //设置收货日期
			shdate(date){
				this.deliveryDate = date
			},
             //精准搜索确认
            sureSearchLocation(){
               this.axios.get('/ship/query/?uid=' + this.uid,{
                recordNo:this.reNoL,//单号
                recordDate:this.poDateL,//单据日期
                partnerName:this.supplierNameL,//客户
                deliveryDate:this.deliveryDateL//到货日期
               }).then((res) => {
                if(res.data.status==200){
                  let data = res.data
                      this.Allpo = data.rows;
                      this.Allpo.forEach((x,index)=>{
                      	x.check=false
                        	x.createTime=new Date(x.createTime).toLocaleDateString().replace(/\//g,'-')
							x.recordDate=new Date(x.recordDate).toLocaleDateString().replace(/\//g,'-')
							x.deliveryDate=new Date(x.deliveryDate).toLocaleDateString().replace(/\//g,'-')

                        })
                      this.pageSize = data.pageSize;
                      this.total = data.total;
                      this.reNoL=''
                      this.poDateL=''
                      this.supplierNameL=''
                      this.deliveryDateL=''
                      this.psisshow=false
                  }
               })
            },
             //精准搜索取消
            cancelSearchLocation(){
              this.reNo=''
              this.poDate=''
              this.supplierName=''
              this.deliveryDate=''
              this.psisshow=false
            },
            //搜索收货人
			alertdeliverName(){
				this.axios.get('/clienta/query/'+this.partnerId+'?uid='+this.uid).then(res=>{
					if(res.data.status==200){
						// this.deliverNames=res.data.rows
						this.shrdata=res.data.rows
						this.shrtotal=res.data.total
						this.shrpageSize=res.data.pageSize
						this.shrdata.forEach(x=>{
							x.Raddress=x.province+x.city+x.country+x.address
						})
						

					}
				})
				this.alertshr=true
			},
            //点击一行收货人
            shrrow(row){
            	console.log(row)
            	this.xiaoshouformValidate.deliverName=row.name
            	this.shr=row
            },
            //双击
            dblshrrow(){
            	this.makeshr()
            },
            //取消
            modelCancelshy(){
            	this.alertshr=false
            	this.shr={}
            	this.shrdata=[]
            },
            shrrow1(data){
  				this.xiaoshouformValidate.deliverName=data.name
            	this.xiaoshouformValidate.deliverMobile=data.mobile
            	this.xiaoshouformValidate.deliverTel=data.phone
            	this.alertshr=false
            	this.alertshr1=false
            		//接收地址
				this.deliverProvince=data.province
        		this.deliverCity=data.city
        		this.deliverCountry=data.country
        		this.deliverAddress=data.address
        		//转为code
        		if(this.deliverProvince==null || this.deliverProvince=='' || this.deliverCity==null|| this.deliverCity=='' || this.deliverCountry==null ||this.deliverCountry==''){
        			this.selectedOptions2=[]
        		}else{
        			this.selectedOptions2=[
            			this.TextToCode[this.deliverProvince].code,
            			this.TextToCode[this.deliverProvince][this.deliverCity].code,
            			this.TextToCode[this.deliverProvince][this.deliverCity][this.deliverCountry].code
            			]
        		}
  			},
  			changeDliver(){
  				if(this.xiaoshouformValidate.deliverName==''){
  					this.shrdata=[]
  					this.alertshr1 = false
  					return
  				}else{
  					this.axios.get('/clienta/query/'+this.partnerId+'?uid='+this.uid+'&keyword='+this.xiaoshouformValidate.deliverName).then(res=>{
						if(res.data.status==200){
							this.shrdata=res.data.rows
							this.shrtotal=res.data.total
							this.shrpageSize=res.data.pageSize
							this.alertshr1 = true
						}else{
							this.$notify({
						        title:"",//
						        message: res.data.errorMessage,
						        type: 'error',
						        position: 'bottom-right'
					        });
						}
					})
  				}
  				
  			},
            //确认
            makeshr(){
            	this.xiaoshouformValidate.deliverName=this.shr.name
            	this.xiaoshouformValidate.deliverMobile=this.shr.mobile
            	this.xiaoshouformValidate.deliverTel=this.shr.phone
            	this.deliverProvince=this.shr.province
        		this.deliverCity=this.shr.city
        		this.deliverCountry=this.shr.country
        		this.deliverAddress=this.shr.address
        		//转为code
        		if(this.deliverProvince==null || this.deliverProvince=='' || this.deliverCity==null|| this.deliverCity=='' || this.deliverCountry==null ||this.deliverCountry==''){
        			this.selectedOptions2=[]
        		}else{
        			this.selectedOptions2=[
            			this.TextToCode[this.deliverProvince].code,
            			this.TextToCode[this.deliverProvince][this.deliverCity].code,
            			this.TextToCode[this.deliverProvince][this.deliverCity][this.deliverCountry].code
            			]
        		}
            	this.alertshr=false
            },
           //获取当前时间
           getDate(){
            let date=new Date()
			this.xiaoshouformValidate.recordDate=date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()
           },
           //单击仓库列表一行
			ckrow(data,index){
				this.ckObj=data
			},
			//双击调仓库确认
			dblckrow(){
				this.makeck()
			},
			//仓库弹框
			warehouseModal(){
				this.getallwarhose()
				this.warehouseshow =true
			},
			//仓库确认
			makeck(){
				this.xiaoshouformValidate.warehouseName= this.ckObj.name
				this.warehouseId= this.ckObj.id
				this.warehouseCode= this.ckObj.code
				this.warehouseshow=false
			},
			ckrow1(data){
				this.xiaoshouformValidate.warehouseName= data.name
				this.warehouseId= data.id
				this.warehouseCode= data.code
				this.warehouseshow=false
				this.warehouseshow1=false
			},
			cahngeWareHouse(){
				if(this.xiaoshouformValidate.warehouseName==''){
					this.allwarehouse=[]
					this.warehouseshow1=false
					return
				}
				this.axios.get('transfer/ware?keyword='+this.xiaoshouformValidate.warehouseName+'&uid='+this.uid+'&status=1').then((res)=>{
					this.allwarehouse=res.data.rows
					this.cktotal=res.data.total
					this.ckpageSize=res.data.pageSize
					this.warehouseshow1=true
				})
			},
			//获取所有仓库
			getallwarhose(){
				this.axios.get('transfer/ware?uid='+this.uid+'&status=1').then((res)=>{
					this.allwarehouse=res.data.rows
					this.cktotal=res.data.total
					this.ckpageSize=res.data.pageSize
				})
			},
			//仓库模糊搜索
			getckKeyword(){
				this.axios.get('transfer/ware?keyword='+this.ckkeyword+'&uid='+this.uid+'&status=1').then((res)=>{
					if(res.data.status==200){
						this.allwarehouse = res.data.rows
              			this.cktotal=res.data.total
						this.ckpageSize=res.data.pageSize
					}
				})
			},
			enterSearchCH(){
				this.getckKeyword()
			},
			 //仓库切换一条页
			
            getckData(current){
                this.axios.get('transfer/ware?offset='+current+'&uid='+this.uid+'&status=1').then((res)=>{
              		if(res.data.status==200){
              			this.allwarehouse = res.data.rows
              			this.cktotal=res.data.total
						this.ckpageSize=res.data.pageSize
              		}

                })
            },
            //翻页
            changeckPageSize(size){
                this.ckpageSize = size
            },
            //打印
			printOrder(){
				this.axios.get('ship/print?ids='+this.orderStr+'&uid='+this.uid).then(res=>{
					if(res.data!=null){
						this.$notify({
							title:"",//
							message: res.data.errorMessage,
							type: 'error',
							position: 'bottom-right'
						});
					}else{
						window.location.href=res.request.responseURL
						this.orderStrArr=[]
						this.single=false
						this.orderStr=''
						this.numIndex=-1
						this.getcgList(this.valueT)//获取全部采购订单
					}
					
	        	})
  		},
  		//全选
			checkAll(v){
				 //订单全选
				this.orderStrArr=[]
				this.orderStr=''
            	this.single=v
            	this.Allpo.forEach((x)=>{
            		if(this.single){
            			x.check=true
            			if(this.orderStrArr.indexOf(x.id)>=0){
            				this.orderStrArr.splice(this.orderStrArr.indexOf(x.id),1)
            			}else{
            				this.orderStrArr.push(x.id)
            				this.orderStr=this.orderStrArr.join(',')
            			}	
            		}else{
            			x.check=false
            			this.orderStrArr=[]
            			this.orderStr=''
            		}
        		})
			},
			//单选
            changeOnRowOrder(item,index,event){
            	if(event==false){
            		this.single=false
            		this.orderStrArr.splice(this.orderStrArr.indexOf(item.id),1)
					this.orderStr=this.orderStrArr.join(',')
            		//console.log(this.orderStr)
            	}else{
            		this.orderStrArr.push(item.id)
            		this.orderStr=this.orderStrArr.join(',')
            		//console.log(this.orderStr)
            	}
            },
			//导出采购单GET /receipt/export 导出
			 exportOrder(){
				this.axios.get('/ship/export?ids='+this.orderStr+'&uid='+this.uid).then(res=>{
            		if(res.data!=null){
						this.$notify({
							title:"",//
							message: res.data.errorMessage,
							type: 'error',
							position: 'bottom-right'
						});
					}else{
						window.location.href=res.request.responseURL
						this.orderStrArr=[]
						this.single=false
						this.orderStr=''
						this.numIndex=-1
						this.getcgList(this.valueT)//获取全部采购订单
					}
            	})
			 },
			 //导入
            //下载阻止冒泡
			stopsku(event){
               event.stopPropagation()
            },
            //点击
            storeImport(){
                this.importisshow=true
                this.active=1
                this.oneStep=true//第一步显示
                this.twoStep=false//第2步隐藏
                this.threeStep=false//第3步隐藏
                this.url=''
                this.errorisshow=false
                this.error=''
                this.importstoredataList=[]

            },
            //取消
            cancel(){
                this.importisshow=false//弹框消失
                this.oneStep=true//第一步显示
                this.twoStep=false//第2步隐藏
                this.threeStep=false//第3步隐藏
                this.url=''
                this.errorisshow=false
                this.error=''
                this.importstoredataList=[]
            },
            //第一步
            importOne(){
                if(this.url==''){
                	this.errorisshow=true
                    this.error=this.$t('manage.warehouse.upmb')
                    return
                }else{
                    this.active=2
                    this.oneStep=false
					this.twoStep=true

                }

            },
            //返回第一步
            goOneStep(){
                this.active=1
                this.oneStep=true
                this.twoStep=false
            },
            //进入第三
            gothree(){
                this.importisshow=false//弹框消失
                this.oneStep=true//第一步显示
                this.twoStep=false//第2步隐藏
                this.threeStep=false//第3步隐藏
                this.url=''
                this.errorisshow=false
                this.error=''
            },
            //继续编辑完成
            sureimport(){
                
            },
             //上传时
            onprogress(event, file, fileList){
            	
            	this.loadingisshow=true
            },
             //上传之前类型之前
            beforeAvatarUpload(file){
               var fileName=new Array()
                fileName =file.name.split('.');
                const extension = fileName[fileName.length-1] === 'xls'
                const extension2 =  fileName[fileName.length-1]=== 'xlsx'
                const isLt2M = file.size / 1024 / 1024 < 10
                if (!extension && !extension2) {
                    this.$notify({
				        title: "",
				        message:this.$t('finance.upTemplate'),//'上传模板只能是xls、xlsx格式!',
				        type: 'error',
				        position: 'bottom-right'
			        });
                }
                if (!isLt2M) {
                    this.$notify({
				        title: "",
				        message: this.$t('finance.upTemplateB'),//'上传模板大小不能超过 10MB!',
				        type: 'error',
				        position: 'bottom-right'
			        });
                }

             return extension || extension2 && isLt2M

            },
            //成功后的会掉
            success(response, file, fileList){
                 if(response.status==200){
                   	this.error=this.$t('finance.upTemplateS')
                   	this.errorisshow=true
                    this.url=file.name
                    console.log(response)
                    this.loadingisshow=false
                    this.importstoredataList=response.rows
                    this.active=2
                    this.oneStep=false
                    this.twoStep=true
                    this.getcgList()
                }else{
                    this.errorisshow=true
                    this.loadingisshow=false
                    this.error=response.errorMessage
                   //console.log(response)
                }
            },
        },
      
        created(){
        	this.$nextTick(()=>{
        		// this.getAllattr()
        	})
        },
        mounted:function() {
        		if(this.$route.query.id){
					this.id = this.$route.query.id//保存要修改的订单ID
					this.numIndex= this.$route.query.index
					this.valueT= this.$route.query.s
					this.$refs.divsave.style.display="block"//保存按钮
					this.$refs.detail.style.display="none"//详情页面
					this.$refs.edit.style.display="block"//修改
					this.addText = false
					this.editshow = true
					this.orderText="修改订单"
					this.getcginfo(this.id,this.numIndex,{})
					this.getDefaultAnddetails(this.id)

				}
				this.getDate()//当前日期
				
				this.getcgList(this.valueT)//获取全部采购订单
				
				this.getAllcgType()//获取采购类型列表
				 //支付类型
            	this.getpaytype()
				// //进入影藏滚动条
				$('.ivu-scroll-container').css({
						overflowY:"hidden"
					})

				this.height = document.documentElement.clientHeight
				// this.handleReachEdge()//滚动加载
				window.onresize=function(){
					this.height = document.documentElement.clientHeight
				}

        }
    }
    </script>

<style scoped>

.footer-mark{
  width:100%;
  height:40px;
  border-top:1px solid #E4E4E4;
  display: flex;
  justify-content: space-around;
  margin-bottom:-10px;
}
.footer-mark span{
  height:40px;
  line-height: 40px
}
.addInfo{
	margin-left: 10px;
    display: block;
    width:60px;
    text-align: center;
    margin-bottom: 20px;
    color: #2B8F8F;
    font-weight:600;
    border-bottom:2px solid #2B8F8F;
}
.upcha{
		cursor:pointer;
		/*border:1px solid red;*/
		position: absolute;
	    top: 5px;
	    left: 115px;
	}
.upDataList{
	width:100%;
	display: flex;
	flex-wrap: wrap;
}
.upDataList li{
	position:relative;
	margin:10px;
	width:132px;
	/*height:100px;*/
	border:1px solid #e4e4e4;
	padding:5px;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}
.upDataList li span{
	text-align: center;
}
	.top-left-btn{
		background: #3B77E3;
	    margin-right: 10px;
	    color: #fff;
	    border: none;
	    width: 26px;
	    height: 26px;
	    border-radius: 26px;
	    display: inline-block;
	    position: relative;
	    top: 12px;
	}
	.con-list .date .shr{
		display:inline-block;
		width:80px;

		text-align: right;
		overflow: hidden;
		text-overflow:ellipsis;
		white-space: nowrap;
	}
.con-list .date1{
	position:absolute;
	text-align: right;
	right:70px;
	width:80px;
	top:60px;
	height:20px;
	line-height: 20px;
	overflow: hidden;
	text-overflow:ellipsis;
	white-space: nowrap;
}
.con-list .date2{
	position:absolute;
	text-align: right;
	right:50px;
	width:80px;
	top:15px;
	height:20px;
	line-height: 20px;
	overflow: hidden;
	text-overflow:ellipsis;
	white-space: nowrap;
}
.tot{
    position:fixed;
    bottom:10px;
    left:15%;
    z-index:12;
}
	.top-left-btn1{
		background: #FF7D16;
	}
	.top-left-btn:hover{
		cursor:pointer;
	}
	.page-box {
		text-align: left;
		margin-top:5px;
	}

    .add-box {
    	width: 100%;
    	/*margin-top: -10px;*/
    }
    .kcNumber{
    	/*color: #2B8F8F;*/
    	display: flex;
    	justify-content: center;
    	align-items: center;
    	flex-direction: column;
    }
    .kcNumber div{
    	margin-bottom:10px;
    }
    .borderbtn{
    	position: absolute;
    top: 5px;
    right: -185px;
    height: 40px;
    background: rgb(255, 255, 255);
    width: 600px;
    }
    .cheng{
    	width: 100%;
    	height: 60px;
    	/*margin-top: 10px;*/
    }
    .wldw{
    	margin-left:20px;
    }
  .lanren {
    position: absolute;
    text-align: center;
    top: -30px;
    right: -8px;
    width: 0;
    height: 0;
    border-top: 80px solid #d53c39;
    border-left: 80px solid transparent;
}
.lanren span{
    width: 60px;
    height: 60px;
    color: #fff;
    display: block;
    position: relative;

    top: -70px;
    right: 70px;
    font-size: 16px;
    font-weight: 900;
    transform: rotate(46deg);
}

.bgd2{
 border-top: 80px solid #d53c39;
}
.bgd3{
 border-top: 80px solid #3b77e3;
}
.bgd4{
 border-top: 80px solid #40ca98;
}
.bgd5{
 border-top: 80px solid #278fa3;
}
.bgd61{
 border-top: 80px solid #278fa3;
}
.lanrenLeft{
	position: absolute;
    text-align: center;
    top: 0px;
    right: 0px;
    width: 0;
    height: 0;
    border-top:40px solid #d53c39;
    border-left:40px solid transparent;
}
.lanrenLeft span{
width: 40px;
    height: 23px;
    color: #fff;
    display: block;
    position: relative;
    z-index: 9999999999999;
    top: -36px;
    right: 36px;
    font-size: 12px;
     font-weight: 100;
    transform: rotate(46deg);
}
.bgd6{
 border-top: 40px solid #3b77e3;
}
.bgd7{
 border-top: 40px solid #d53c39;
}
.bgd8{
 border-top: 40px solid #3b77e3;
}
.bgd9{
 border-top: 40px solid #40ca98;
}
.bgd10{
 border-top: 40px solid #278fa3;
}
.bgd11{
 border-top: 40px solid #278fa3;
}
.bgd12{
 border-top: 40px solid #278fa3;
}
.bgd13{
 border-top: 40px solid #3b77e3;
}
.textbg1{
		color:#3b77e3;
	}
	.textbg2{
		color:#d53c39;
	}
	.textbg3{
		color:#3b77e3;
	}
	.textbg4{
		color:#40ca98;
	}
	.textbg5{
		color:#278fa3;
	}

  
    .detail-top li{
    	list-style: none;
    	margin:0 10px 0 0;
    }
    .detail-top li span.blackinfo-left{

    color: #2B8F8F;
    /* margin: 0px 10px; */
    font-weight: 600;
    
    }
    .detail-top{
    	position:relative;
    
    }

    .time{
        font-size: 14px;
        font-weight: bold;
    }
    .content{
        padding-left: 5px;
    }
    .cha{
    	margin-right:30px;
    	margin-left:15px;
    }
    .modelInput{
    	display: inline-block;
		width: 100%;
		height: 34px;

		text-indent: 10px;
		color: #555;
		background-color: transparent;
		background-image: none;
		border: 1px solid #eee;


		-webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
		-o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
		transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }
    .modelInput:focus{
		border-color: #66afe9;
		outline: 0;
		-webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 4px rgba(102, 175, 233, .6);
		box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 4px rgba(102, 175, 233, .6);
	}
    .top{
    	display:flex;
    	height:60px;
    	line-height: 60px;
    	position:fixed;
    	width:100%;
    	z-index:9999;
    	background: #fff;
    	border-bottom:1px solid #ccc;
    }
    .title{
    	display:flex;justify-content: space-between;margin-top:20px
    }
    .title:hover{
    	cursor:pointer;
    }
    .head{
    	width:100%;
	  height:60px;
	  display: flex;
	  position: fixed;
	  z-index:10;
	  background: #fff;
	  border-bottom:1px solid #e4e4e4;
    }

    	.right-content{
    		width: 100%;
    		/*height:100%;*/
    		/*margin-top:10px;*/
    		/*margin-bottom:140px;*/
    	}

    	.list-box{
    		display: flex;
    		height:35px;
    		line-height: 35px;
    		margin:25px 10px;
    	}
    	.list-box span{
    		height:40px;
    		width:120px;
    		text-align: center;
    		padding:0 10px;
    		font-weight:600;
    	}
    	.list-box input.ivu-input{
    		height:40px!important;
    	}
    	.list-box1{
    		margin-left:20px;

    	}
    	.left-top{
    		height: 60px;
	  		width:360px;
	      	flex:0 0 360px;
	  		line-height: 60px;

	  		display:flex;
	  		background: #fff;
	  		border-right:1px solid #eee;
	  		border-bottom:1px solid #eee;
	  		justify-content: space-between;
    	}
    	.right-top{
    		height: 60px;
		line-height: 60px;
		display:flex;
		margin-left:360px;
		justify-content: space-between;

    	}
    	.content1{
    		position:absolute;
    		left:400px;
    	}
    	.filter{
    		width: 80px;
    		height: 32px;
    		line-height: 33px;
    		border-top-right-radius: 6px;
    		border-bottom-right-radius: 6px;
    		margin-top: 2px;
    		position: relative;
    		left: -65px;
    		background: #00A7F5;
    		color: #fff;
    		border-left: 1px solid #ccc;
    	}


	.detail-bottom{
		margin-top:20px;
	}
	.detail-title-mark{
		display:flex;
		justify-content: flex-start;
		border-bottom:1px solid #eee;
		margin-top:1px;
		margin-left: 10px;
	}
	.detail-title{
		padding:10px 40px;

	}
	.detail-public{
		/*width:68%;*/
		margin:10px;
	}
	.bor{
		border-bottom:2px solid #086CA2;
	}

	.address{
		display:flex;
		justify-content: space-between;
		width:100%;
	}
	.address .tb{
		margin-top: 40px;
		margin-left: 20px;
		margin-right: 8px;
	}
	.right-detail{
		padding:10px;
	}

	.flexbordercode{

		width:100%;
		height:100%;
		display:flex;
		flex-wrap: wrap;
		align-items: center;
		padding:10px;
		margin-left:10px;
	}
	.bordercode{
		width:200px;
		height:140px;
		text-align: center;
		margin-right:10px;
		margin-top:10px;

		position:relative;
	}
	.bordercodecolor{
		border:1px solid red;
		background: linear-gradient(#eee,#fff);
	}
	.b{
		border:1px solid red;
		background: linear-gradient(#eee,#fff);
	}
	.bordercodeicon{
		position:absolute;
		top:5px;
		left:5px;
		width:16px;
		height:16px;
		/*background:url(../../../static/img/duihao1.png);*/
	}
	.borderimg{
		max-height:100%;
		height:100px;
	}
	.changebutton p{
		width:100%;
		cursor:default;
	}

	.ivu-poptip-inner .ivu-poptip-body{
		padding:0;
	}
	.add-box:after {
		content: '';
		display: block;
		clear: both;
	}
	.attrNum{
		height:35px;
		line-height: 35px;
		margin:10px 0 10px 0px;
	}
	.attrNum span{
		display:inline-block;
		width:100px;
		text-align: right;
	}
	.left-btn button {
	/*	width: 70px;
		height: 40px;
		color: #fff;
		font-size: 14px;
		color: #ececec;
		border: 0;
		border-radius: 6px;*/
	}

	.ivu-icon-navicon {
		font-size: 20px;
	}
	.bg{
		background:#dbe5f1;
		color:#000;
	}

	.con-list {
		display:flex;
		align-items: center;
		width: 100%;
		word-wrap:break-word;

		border-bottom: solid 1px #E6E6E6;
		padding: 15px 25px;

		cursor: pointer;
		position:relative;
	}
	.con-list:last-child{
		margin-bottom:300px;
	}
	.con-list:hover{
		cursor:pointer;
	}
	.con-list .date{
		position:absolute;
		right:5px;
		top:60px;
		height:20px;
		line-height: 20px;
	}
	.con-list .status{
		width:100px;

		text-align: center;
		position: absolute;
	    right: 0px;
	    top: 47px;
	}
	.con-list .list-title {
		color: #0d0d0d;
		font-size: 14px;
		margin-bottom: 10px;
	}



	.con-list .txt {
		color: #585858;
		font-size: 12px;
		position:relative;
		top:10px;
		left:0;
		display:inline-block;
		width:165px;
		overflow: hidden;
		text-overflow:ellipsis;
		white-space: nowrap;
	}

	.page-box {

	}

	.table1{
 
    	display:flex;
    	flex-direction: column;

    }
	.table1 li{
		width:100%;
		display:flex;
		height:35px;
		line-height: 35px;
		margin-bottom:10px;
	}
	.left-content {
		height:100%;
		width:360px;
    flex: 0 0 360px;
		margin-bottom:300px;
		z-index:9;
		border-right:1px solid #E6E6E6;
		position:fixed;
		background:#F9F9F9;
	}
	.add-right {
		background: #fff;
		height:100%;
		margin-left:360px;
		padding-top:20px;
	}
	.upBtn{
		width:150px;
		height:100px;
		border:1px dotted #ccc;
		border-radius:6px;

	}
	/**激活的button样式**/

	.btnact {
		background: #086ca2 !important;
		color: #fff !important;
	}
	/***正常的样式***/

	.normal {
		background: #d9dbdc !important;
		color: #585858 !important;
	}
	 .demo-spin-icon-load{
        animation: ani-demo-spin 1s linear infinite;
    }
    @keyframes ani-demo-spin {
        from { transform: rotate(0deg);}
        50%  { transform: rotate(180deg);}
        to   { transform: rotate(360deg);}
    }
.TimelineItemtime{
    font-size: 14px;
    font-weight: bold;
}
.operator{
	padding: 0 10px;
    /*width: 240px;*/
     display: inline-block;
}
	</style>
<style type="text/css">
.ivu-scroll-content{
	margin-bottom:100px;
}
 .content{
        padding-left: 5px;
        top:0!important;
    }
.ivu-scroll-container::-webkit-scrollbar{
	width: 0px;
	height: 4px;
	background-color: #f5f5f5;
}
.ivu-scroll-container::-webkit-scrollbar-track{
	-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
	border-radius: 10px;
	background-color: #f5f5f5;
}
.ivu-scroll-container::-webkit-scrollbar-thumb{

	height: 2px;
	border-radius: 18px;
	-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
	background-color: #ccc;
}
.layout-content-main{
	margin-top:0px!important;
}
.ivu-btn{
	padding:4px 15px!important;
}
.ivu-modal-header{
	padding: 4px 16px;
}
.ivu-modal-footer{
	border-top:none;
	margin-top:-10px;
}

.ivu-modal-close .ivu-icon-ios-close-empty{
	color:#000;
	font-weight:600!important;
}

.el-input__inner{
	border: 1px solid #e4e4e4!important;
	height: 32px!important;
}

</style>
