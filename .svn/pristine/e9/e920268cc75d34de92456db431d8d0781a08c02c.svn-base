<template>
	<div>
		<!--头部-->
		<div class='head-bottom1'>
			<!-- <li class='head-bottom1-li head-bottom1-li1'>
				
				<div class="car-body">
					<ul style="display:flex;justify-content: space-around;">
						<li>
							<span >账户余额</span>
							<h3 class="f-50 font-weight-100">{{withDraw}}</h3>
						</li>

						<li>
							<span >不可用余额</span>
							<h3 class="f-50 font-weight-100">{{freezeAmount}}</h3>
						</li>
					</ul>
					<div style='margin-top:-5px;margin-left:10px;text-align: right;'>
						<a >{{$t('finance.cz')}}</a>
						<a style='margin-left:5px'>{{$t('finance.zz')}}</a>
						<a style='margin-left:5px' @click='yetx'>{{$t('finance.tx')}}</a>

					</div>
				
				</div>
			</li> -->
			<!-- <div class='head-bottom1'> -->
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >客户欠款</span>
					<h3 class="f-50 font-weight-100">{{parArrearage}}</h3>
				</div>
			</li>
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >供应商欠款</span>
					<h3 class="f-50 font-weight-100">{{supArrArrearage}}</h3>
				</div>
			</li>
			
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >本周销售总额</span>
					<h3 class="f-50 font-weight-100">{{totalSales}}</h3>
				</div>
			</li>
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >本周销售毛利</span>
					<h3 class="f-50 font-weight-100">{{grossMargin}}</h3>
				</div>
			</li>
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >本月采购额</span>
					<h3 class="f-50 font-weight-100">{{totalPoM}}</h3>
				</div>
			</li>
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >本年采购额</span>
					<h3 class="f-50 font-weight-100">{{totalPo}}</h3>
				</div>
			</li>
			<li class='head-bottom1-li'>
				<div class="car-body">
					<span >比上周</span>
					<h3 class="f-50 font-weight-100">{{comparison}}%</h3>
				</div>
			</li>
		<!-- </div> -->
		</div>
		<!--中间-->
		<div class='center-main' style='position:relative;height:220px'>
			<div class='center-main-left' style='position:relative'>
				 <Tabs value="name1">
			        <TabPane :label="$t('orders.gl.Yjy')" name="name1">
			        	<div style='display:flex;flex-direction:column'>
				        	<div style='display:flex;justify-content: space-around;'>
				        		<div>
				        			<div>{{$t('orders.orderAmount')}}</div><!--订单金额-->
				        			<div>0</div>
				        		</div>
				        		
				        		<div>
				        			<div>{{$t('orders.gl.Oprice')}}</div><!--笔单价-->
				        			<div>0</div>
				        		</div>
				        	</div>
				        	<div style='display:flex;justify-content: space-around;margin-top:20px'>
				        		<div>
				        			<div>{{$t('orders.gl.orderNum')}}</div><!--订单笔数-->
				        			<div>0</div>
				        		</div>
				        		
				        		<div>
				        			<div>{{$t('orders.TKmoney')}}</div><!--退款金额-->
				        			<div>0</div>
				        		</div>
				        	</div>

				        	<div style='width:80%;margin:20px auto'>
				        		<Input icon="ios-search"></Input>
				        	</div>
			        	</div>
			        </TabPane>
			        <TabPane :label="$t('orders.gl.Ysz')" name="name2">
			        	<div style='display:flex;flex-direction:column'>
				        	<div style='display:flex;justify-content: space-around;'>
				        		<div>
				        			<div>{{$t('orders.gl.Samount')}}</div><!--收支金额-->
				        			<div>0</div>
				        		</div>
				        		
				        		<div>
				        			<div>{{$t('orders.gl.Oprice')}}</div><!--笔单价-->
				        			<div>0</div>
				        		</div>
				        	</div>
				        	<div style='display:flex;justify-content: space-around;margin-top:20px'>
				        		<div>
				        			<div>{{$t('orders.gl.orderNum')}}</div><!--订单笔数-->
				        			<div>0</div>
				        		</div>
				        		
				        		<div>
				        			<div>{{$t('orders.TKmoney')}}</div><!--退款金额-->
				        			<div>0</div>
				        		</div>
				        	</div>

				        	<div style='width:80%;margin:20px auto'>
				        		<Input icon="ios-search"></Input>
				        	</div>
			        	</div>
			        </TabPane>
			       
			    </Tabs>
			    <!-- <a style='position:absolute;right:5px;top:10px'>查看更多</a> -->
			</div>
			<div id="myEcharts" style="width: 100%;margin:10px;border:1px solid #ccc;"></div>
			<div style='width:100px;position:absolute;left:375px;top:22px'>
        		<Select v-model="model10" >
				   	<Option v-for="item in cityList0" :value="item.value" :key="item.value">{{ item.label }}</Option>
				</Select>
        	</div>
        	<div v-if='lenorder==0'  style="position:absolute;left:55%;;top:25%">{{$t('public.NoData')}}</div>
        	
		</div>
		<!--下方第一排图表-->
			<div class='echarts' style="margin-bottom:10px;position:relative">
				<div id="myEchartMonth" style="width: 100%;margin:0 10px;border:1px solid #ccc;;"></div>
				<div v-if='lenM==0'  style="position:absolute;left:55%;;top:25%">{{$t('public.NoData')}}</div>
			</div>
			<!--图表下方数据总结-->
			<!-- <div class='zj'>
				<div class='zj-style'>
					<span>{{$t('finance.XSJE')}}</span>
					<span>￥：15469845215</span>
				</div>
				<div class='zj-style'>
					<span>{{$t('finance.XSJE')}}</span>
					<span>￥：1851474441</span>
				</div>

			</div> -->
			<div class='echarts ' style='margin-top:10px;position:relative'>
				<!--采购曲线-->
				<div id="myEchartcgfx" style="width: 100%;margin:0 10px;border:1px solid #ccc;"></div>	
				<div style='width:100px;position:absolute;left: 20px;;top:15px'>
        			<DatePicker type="year"  placeholder="Select year" :value="year" style="width: 100px" @on-change="changeYear"></DatePicker>
        		</div>
        		<div v-if='len==0'  style="position:absolute;left:25%;;top:25%">{{$t('public.NoData')}}</div>


				<!--采购成本分析-->
				<div id="myEchartcg" style="width: 100%;margin:0 10px;border:1px solid #ccc;;"></div>
				<div style='width:100px;position:absolute;right: 20px;;top:15px'>
        				<DatePicker type="year" placeholder="Select year" placement='left-start' :value="yearSku" style="width: 100px" @on-change="changeYearSku2"></DatePicker>
        		</div>
        		<div v-if='len4==0'  style="position:absolute;left:75%;;top:25%">{{$t('public.NoData')}}</div>
			</div>
			<div class='echarts ' style='margin-top:10px;position:relative;margin-bottom:120px'>
				<!--销售比较-->
				<div id="myEchartxsbj" style="width: 100%;margin:0 10px;border:1px solid #ccc;"></div>
				<div style='width:100px;position:absolute;left: 20px;;top:15px'>
	        		<Select v-model="model1" @on-change="orderselected">
					    <Option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</Option>
					</Select>
	        	</div>
				<!--销售增长-->
				<div id="myEchartxszz" style="width: 100%;margin:0 10px;border:1px solid #ccc;"></div>
				<div v-if='len5==0'  style="position:absolute;left:75%;;top:25%">{{$t('public.NoData')}}</div>
			</div>
			<!-- <div class='zj'>
				<div class='zj-style'>
					<span>{{$t('finance.XSJE')}}</span>
					<span>￥：23423412</span>
				</div>
				<div class='zj-style'>
					<span>{{$t('finance.XSJE')}}</span>
					<span>￥：45645</span>
				</div>
			</div> -->
			<!--图表第三-->
			
			
	<!--提现弹框-->
	<Modal v-model="txisshow" width="800px">
	    <p slot="header" style="height:30px;line-height:30px;text-align:center">
	      <span>{{$t('finance.tx')}}</span>
	    </p>
		<div style='background:#FCFCFC;padding:10px'>
			<Form ref="formValidatetx" :model="formValidatetx" :rules="ruleValidatetx" :label-width="80">
				<FormItem :label="$t('finance.YHK')"><!--选择银行卡-->
                  <div>
                  	<li v-for='(item,index) in yhkData' :key='index' class='yhklist'>
                  		<div class='yhklist1' >
                  			<Radio v-model="item.default" style='margin-left:10px'  @on-change='changeyhkisDefault(item)'></Radio>
                  			
                  		<div style='height:25px;width:25px;border-radius:50%;overflow: hidden;line-height:25px;text-align:center;margin-top: 2px;'>
                  			<img src="" style='width:100%;height:100%;vertical-align: middle;'>
                  		</div>
                  			<span style='margin-left:20px'>{{item.name}}</span>
                  			<span style='margin-left:20px'>{{$t('finance.WH')}}{{item.account?item.account.substring(item.account.length-3):""}}</span>
                  		</div>
                  		<span style='margin-right:40px'>{{$t('finance.DBZG')}}50000.00 {{$t('finance.DRZG')}}500000.00</span>
                  	</li>
                  	<li class='yhklist2' style='color:#407BE4;cursor:pointer' @click='addyhk'><span style='display:inline-block;margin:0 10px'>+ </span>{{$t('finance.addyhk')}}</li>
                  </div>
                </FormItem>
                <FormItem :label="$t('finance.txje')" prop="amount">
                   <Input v-model='formValidatetx.amount' :placeholder="$t('finance.iuputje')" style='width:200px'></Input><span style='color:#b2b2b2'>{{$t('finance.sxf')}}</span>
                </FormItem>
               <!--  <Button  type="primary" style=";border:none;height:32px;margin-left:80px;width:100px" @click='suretx("formValidatetx")'>确认提交
	             </Button> -->
			</Form>
		</div>
    		
	    <div slot="footer">
	      <div class='footer-mark'>
	        <span><a style='color:#999;font-size:14px' @click='canceltx'>{{$t('public.cancel')}}</a></span>
	        <span style='font-size:20px;width:1px;height:40px;background:#e4e4e4'></span>
	        <span ><a style='color:#3B77E3;font-size:14px' @click='suretx("formValidatetx")'>{{$t('public.sure')}}</a></span>
	      </div>
	    </div>
  		</Modal>
  	<!--添加银行卡-->
		<Modal v-model="yhkisshow" width="460px">
			<p slot="header" style="height:30px;line-height:30px;align-item:center">
				<span>{{$t('finance.addyhk')}}</span>
			</p>
			<Form ref="formValidateyhk" :model="formValidateyhk" :rules="ruleValidateyhk" :label-width="90">
				<FormItem :label="$t('finance.yhkNum')" prop="account">
            		<Input v-model='formValidateyhk.account' style=''></Input>
            		<div style='color:#b2b2b2'>{{$t('finance.yhksb')}}</div>
               	</FormItem>
               	<FormItem :label="$t('finance.yhkNum')" prop="name">
            		<Input v-model='formValidateyhk.name' :placeholder="$t('finance.yhkNum')" style=''></Input>
               	</FormItem>
               	<FormItem :label="$t('finance.zsxm')" prop="userName">
            		<Input v-model='formValidateyhk.userName' style=''></Input>
               	</FormItem>
               	<FormItem :label="$t('finance.phone')" prop="mobile">
            		<Input v-model='formValidateyhk.mobile' style=''></Input>
            		<div style='color:#b2b2b2'>{{$t('finance.phoneiss')}}</div>
               	</FormItem>
			</Form>
			<div slot="footer">
				<div class='footer-mark'>
					<span><a style='color:#999;font-size:14px' @click='cancelyhk'>{{$t('public.cancel')}}</a></span>
					<span style='font-size:20px;width:1px;height:40px;background:#e4e4e4'></span>
					<span ><a style='color:#3B77E3;font-size:14px' @click='sureyhk("formValidateyhk")'>{{$t('public.sure')}}</a></span>
				</div>
			</div>
		</Modal>
	</div>
	
	<!-- </div> -->
</template>
<script type="text/javascript">
import echarts from 'echarts'
export default{
	data(){
		return{
			year:new Date(),
			yearSku:new Date(),
			yearS:new Date(),
			yearSku2:new Date(),
			lenorder:0,
			lenM:0,//零售月报
			len4:0,
			len5:0,//利润曲线
			len:0,
			yhkData:[],//银行卡
			yhkname:"",//提现银行名称
			yhkzh:"",//提现银行账户
			username:"",
			formValidatetx:{
				amount:'',//提现金额
			},
			ruleValidatetx:{
				amount:[ 
				 	{ required: true, message: '提现金额不能为空', trigger: 'blur'},
					{ pattern: /^\d{1,14}(\.\d{1,2})?$/, message: '提现金额应为数字或小数且小数点后两位', trigger: 'blur'  },]
			},
			withDraw:0,//可用余额
			freezeAmount:0,//不可用余额
			txisshow:false,

			yhkisshow:false,//添加银行卡弹框
			formValidateyhk:{
				name:"",//一行卡名称
				account:"",//卡号
				userName:"",//姓名
				mobile:"",//手机号
			},
			ruleValidateyhk:{
				name:[{ required: true, message: '银行卡名称不能为空', trigger: 'blur' }],
				account:[{ required: true, message: '卡号不能为空', trigger: 'blur' }],
				userName:[{ required: true, message: '姓名不能为空', trigger: 'blur' }],
				mobile:[{ required: true, message:this.$t('orders.phoneNoEmpty'), trigger: 'blur' },{ pattern: /^1[3|4|5|7|8][0-9]{9}$/, message: '请输入正确的手机号码' }],
			},


			model10:"",
			parArrearage:0,//客户欠款数
			supArrArrearage:0,//供应商欠款数
			totalSales:0,//销售总额
			grossMargin:0,//销售毛利
			totalPo:0,//采购额
			totalPoM:0,//采购额
			comparison:0,//采购额占比
			uid: this.$store.state.common.token,
			cityList0:[
				{
					value:0,
					label:this.$t('orders.gl.yS'),//"昨日"
				},
				{
					value:1,
					label:this.$t('orders.gl.S'),//"最近7天"
				},
				{
					value:3,
					label:this.$t('orders.gl.SM'),//"最近一月"
				},
				{
					value:5,
					label:this.$t('orders.gl.SSM'),//"最近半年"
				},
				{
					value:7,
					label:this.$t('orders.gl.SOY'),//"最近一年"
				},
			],
			model1:1,//默认本月
			cityList:[
				
				{
					value:1,
					label:"本月"
				},
				{
					value:2,
					label:"本季度"
				},
				{
					value:3,
					label:"本年"
				},
			],
			
		}
	},
	methods:{
		//下拉选择
		orderselected(value){

			this.drawxsbj(value)
		},
		changeYearSku2(y){
			this.drawcg(y)
		},
		//零售月报
		drawMonth(){
			let myEchartMonth = echarts.init(document.getElementById('myEchartMonth'),'shine')
			this.lenM=0
			myEchartMonth.showLoading()
			let option={
					title:{
						text:"零售月报",
						 x: 'center',
					},
				    tooltip : {},
				    toolbox: {
				        show : true,
				        feature : {
				            mark : {show: true},
				            dataView : {show: true, readOnly: false},
				            magicType : {
				                show: true, 
				                type: ['pie'],
				                option: {
				                    funnel: {
				                        x: '25%',
				                        width: '50%',
				                        funnelAlign: 'left',
				                        max: 1548
				                    }
				                }
				            },
				            restore : {show: true},
				            saveAsImage : {show: true}
				        }
				    },
				    legend: {
				       

				    },
				      xAxis: [
				      
				      	{
			      			 type : 'category',
			      		
			      			// data:this.getEvryDay(),
			      			data:[],
			      			//文字过多倾斜显示
			      			axisLabel: {  
                               interval: 0,  
                               // formatter:function(value)  
                               // {  
                               //     return value.split("").join("\n");  
                               // }  
                           }  
			      		}
				      ],
		            yAxis: {
		            	
		            },
		            series: [{
		              	name:"门店指数",//'销售指数',
		                type: 'line',
		                data: [],
		                itemStyle: {
				                normal: {
				                    color: function(params) {
				                      
				                        var colorList = [
				                          
				                         '#B5C334','#27727B', '#FE8463','#9BCA63','#FCCE10','#E87C25','#FAD860','#F3A43B','#60C0DD','#B5C334','#27727B', '#FE8463','#9BCA63','#FCCE10','#E87C25','#FAD860','#F3A43B','#60C0DD','#B5C334','#27727B', '#FE8463','#9BCA63','#FCCE10','#E87C25','#FAD860','#F3A43B','#60C0DD','#B5C334','#27727B', '#FE8463','#9BCA63','#FCCE10','#E87C25','#FAD860','#F3A43B','#60C0DD'
				                        ];
				                        return colorList[params.dataIndex]
				                    },
				                    label: {
				                        show: true,
				                        position: 'top',
				                        // formatter: '{b}'
				                    }
				                }
				            },
		            },
		            
		            ]
				}
			myEchartMonth.setOption(option);
			myEchartMonth.hideLoading()
		},
		//订单分析//GET /pdata/retail/detail 零售营业额明细myEcharts
		draw(){
			let myChart = echarts.init(document.getElementById('myEcharts'),'shine')
			this.lenorder=0
			myChart.showLoading()
			let option={
					title:{
						text:this.$t('finance.orderfx'),//"订单分析",
						 x: 'center',
					},
				    tooltip : {
				    	trigger: 'item',
				        formatter: "{a} <br/>{b} : {c}"
				    },
				    legend: {
						// data:['订单金额','订单笔数','退款金额'],
						data:[this.$t('finance.orderje'),this.$t('finance.orderNum'),this.$t('finance.orderTK')],
				        right:0
				    },
				     xAxis: {
		                data: []
		            },
		            yAxis: {},
		            series: [
			            {
			                name:this.$t('finance.orderje'), //'订单金额',
			                type: 'line',
			                data:[]
			            },
			            {
			            	 name:this.$t('finance.orderNum'),// '订单笔数',
			                type: 'line',
			                 data:[]
			            },
			           
			            {
			            	 name:this.$t('finance.orderTK'),// '退款金额',
			                type: 'line',
			                 data:[]
			            }
		            ]
			}
			myChart.setOption(option);
			myChart.hideLoading()
		},
		
		//销售曲线
		drawxsbj (value){
			let myEchartxsbj = echarts.init(document.getElementById('myEchartxsbj'),'shine')
			myEchartxsbj.showLoading()
			//本月GET  订单salesOverview/mOrder
			if(value==1){
				this.axios.get('xsbb/mOrder?uid='+this.uid).then(res=>{
					if(res.data.status==200){
						this.len=res.data.rows.morderChange.length
						let tm=[]//时间
						let qty=[]//数量
						res.data.rows.morderChange.forEach((x,index)=>{
							tm.push(res.data.rows.morderChange[index].tm)
							qty.push(res.data.rows.morderChange[index].qty)
						})
						let option={
							title:{
								text:"销售曲线",
								 x: 'center',
							},
							//提示框
						    tooltip : {
						    	axisPointer: {
						            type: 'cross'
						        }
						    },
						    legend: {
						    	left:'right',
						    	tyle:"scroll",
						    	// show:false,
						        data:['销售数量'],
						    },
						     xAxis: {
						     	type:'category',
				                data: tm//时间数组
				            },
				            yAxis: {

				            },
				            series: [
					            {
					                name: '销售数量',
					                type: 'line',
					                data:qty,//数量数组
					                
					                itemStyle: {
					                normal: {
					                  
					                    label: {
					                        show: true,
					                        position: 'top',
					                        formatter: '{c}'
					                    }
					                }
					            },
					            },
				            ]
						};
						myEchartxsbj.setOption(option);
						myEchartxsbj.hideLoading()
						}
					
				})
			}
			//本季度
			if(value==2){
				this.axios.get('/xsbb/order?uid='+this.uid).then(res=>{
					myEchartxsbj.showLoading()
					if(res.data.status==200){
						this.len=res.data.rows.orderChange.length
						let tm=[]//时间
						let qty=[]//数量
						res.data.rows.orderChange.forEach((x,index)=>{
							tm.push(res.data.rows.orderChange[index].tm)
							qty.push(res.data.rows.orderChange[index].qty)
						})
						let option={
					    tooltip : {},
					    legend: {
					    	tyle:"scroll",
					        data:['销售数量'],

					    },
					     xAxis: {
					     	type:'category',
			                data: tm
			            },
			            yAxis: {},
			            series: [
				            {
				                name: '销售数量',
				                type: 'line',
				                data:qty,
				                normal: {
					                  
					                    label: {
					                        show: true,
					                        position: 'top',
					                        formatter: '{c}'
					                    }
					                }
				            },
			            ]
					};
					myEchartxsbj.setOption(option);
					myEchartxsbj.hideLoading()
					}
				})
			}
			//本年
			if(value==3){
				this.axios.get('/xsbb/yOrder?uid='+this.uid).then(res=>{
					myEchartxsbj.showLoading()
					if(res.data.status==200){
						this.len=res.data.rows.yorderChange.length
						let tm=[]//时间
						let qty=[]//数量
						res.data.rows.yorderChange.forEach((x,index)=>{
							tm.push(res.data.rows.yorderChange[index].tm)
							qty.push(res.data.rows.yorderChange[index].qty)
						})
						let option={
					    tooltip : {},
					    legend: {
					    	tyle:"scroll",
					        data:['销售数量'],

					    },
					     xAxis: {
					     	type:'category',
			                data: tm
			            },
			            yAxis: {},
			            series: [
				            {
				                name: '销售数量',
				                type: 'line',
				                data:qty,
				                normal: {
					                  
					                    label: {
					                        show: true,
					                        position: 'top',
					                        formatter: '{c}'
					                    }
					                }
				            },
			            ]
					};
					myEchartxsbj.setOption(option);
					myEchartxsbj.hideLoading()
					}
				})
			}
		 
		},
		//利润
		drawxszz(){
			let myEchartxszz = echarts.init(document.getElementById('myEchartxszz'),'shine')
			this.len5=0
			myEchartxszz.showLoading()
			let option={
					title:{
						text:'利润曲线',
						 x: 'center',
					},
				    tooltip : {},
				    legend: {
				    	
				    },
				     xAxis: {
		                data:[],
		            },
		            yAxis: {},
		             series: [{
		              	name:this.$t('finance.XSJE'),//'销售金额',
		                type: 'line',
		                data: [],
		                itemStyle: {
				                normal: {
				                    color: function(params) {
				                        // build a color map as your need.
				                        var colorList = [
				                       '#FE8463','#B5C334','#FAD860','#F3A43B','#60C0DD','#9BCA63','#FCCE10','#E87C25','#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0',
				                          '#C1232B'
				                           
				                        ];
								        return colorList[params.dataIndex]
				                    },
				                    //是否显示文字在图表
				                    label: {
				                        show: true,
				                        position: 'top',
				                        // formatter: '{b}'
				                    }
				                }
				            },
		            },
		            
		            ]
				}
				 myEchartxszz.setOption(option);
				 myEchartxszz.hideLoading()
		},
		//采购成本构成
		drawcg(y){
			let myEchartcg = echarts.init(document.getElementById('myEchartcg'),'shine')
			myEchartcg.showLoading()
			this.axios.get('purdata/purclass?year='+y+'&uid='+this.uid+'&length=10').then(res=>{
				if(res.data.status==200){
					let data=res.data.rows.rows
					this.len4=data.length
					let className=[]
					let amount=[]
					data.forEach((x,index)=>{
						className.push(data[index].className)
						let obj={
							value:data[index].amount,
							name:data[index].className
						}
						amount.push(obj)
					})
				let option = {
				    title : {
				        text: '采购成本',
				        x:'center'
				    },
				    tooltip : {
				        trigger: 'item',
				        formatter: "{a} <br/>{b} : {c} ({d}%)"
				    },
				    legend: {
				        orient : 'vertical',
				        x : 'left',
				        // top:45,
				        data:className
				    },
				    toolbox: {
				       show: true,
			            orient: 'vertical',
			            left: 'right',
			            top: 'center',
				        feature : {
				            mark : {show: true},
				            dataView : {show: true, readOnly: false},
				            magicType : {
				                show: true, 
				                type: ['pie', 'funnel'],
				                option: {
				                    funnel: {
				                        x: '25%',
				                        width: '50%',
				                        funnelAlign: 'left',
				                        max: 1548
				                    }
				                }
				            },
				            restore : {show: true},
				            saveAsImage : {show: true}
				        }
				    },
				    calculable : true,
				    series : [
				        {
				            name:'金额',
				            type:'pie',
				            radius : '55%',
				            center: ['50%', '60%'],
				            data:amount
				        }
				    ]
				};
					myEchartcg.setOption(option);
					myEchartcg.hideLoading()
				}
			})
		},


		//采购比较分析
		changeYear(y){
			this.drawcgfx(y)
		},
		//采购曲线
		drawcgfx(y){
			let myEchartcgfx = echarts.init(document.getElementById('myEchartcgfx'),'shine')
			myEchartcgfx.showLoading()
			//purdata/curve?year
			this.axios.get('purdata/curve?year='+y+'&uid='+this.uid).then(res=>{
				if(res.data.status==200){
					let data=res.data.rows.rows
					this.len=data.length
						let YM=[]
						let amount=[]
						data.forEach((x,index)=>{
							YM.push(data[index].YM)
							amount.push(data[index].amount)
						})
						let option={
								title:{
									text:"采购曲线",
									 x: 'center',
								},
								
								//提示框
							    tooltip : {
							    	axisPointer: {
							            type: 'cross'
							        }
							    },
							    toolbox: {
							       show: true,
						            orient: 'vertical',
						            left: 'right',
						            top: 'center',
							        feature : {
							            mark : {show: true},
							            dataView : {show: true, readOnly: false},
							            magicType : {
							                show: true, 
							                type: ['pie', 'funnel'],
							                option: {
							                    funnel: {
							                        x: '25%',
							                        width: '50%',
							                        funnelAlign: 'left',
							                        max: 1548
							                    }
							                }
							            },
							            restore : {show: true},
							            saveAsImage : {show: true}
							        }
							    },
							    
							     xAxis: {
							     	type:'category',
					                data: YM
					            },
					            yAxis: {},
					            series: [
						            {
						                name: '采购金额',
						                type: 'line',
						                data:amount,//数量数组
						                
						                itemStyle: {
						                normal: {
						                  
						                    label: {
						                        show: true,
						                        position: 'top',
						                        formatter: '{c}'
						                    }
						                }
						            },
						            },
					            ]
							};
						myEchartcgfx.setOption(option);
						myEchartcgfx.hideLoading()
					
				}
					
			})
		},
		//获取账户详情pdata/balance
		getAcc(){
			this.axios.get('pdata/balance?uid='+this.uid).then(res=>{
				if(res.data.status==200){
					console.log(res.data.rows)
					this.withDraw=res.data.rows.withDraw//可用余额
					this.freezeAmount=res.data.rows.freezeAmount//不可用余额
				}
			})
		},
		//提现
		yetx(){
			this.txisshow=true
			this.getyhk()//获取银行卡
		},
		//获取银行卡
		getyhk(){
			this.axios.get('/cbank/query?uid='+this.uid).then(res=>{
				if(res.data.status==200){
					this.yhkData=res.data.rows
					this.yhkData.forEach((x)=>{
						if(x.default){
							console.log(x)
							this.yhkzh=x.account
							this.yhkname=x.name
							this.username=x.userName
						}
					})
				}
			})
		},
		//提现确认
		//确认提现提交POST /pdraw/add 提现
		suretx(name){
			this.$refs[name].validate((valid) => {
				if(valid){
					if(this.formValidatetx.amount==0 || this.formValidatetx.amount>this.withDraw){
						this.$notify({
					        title:"",//
					        message: '超出可提现金额',
					        type: 'error',
					        position: 'bottom-right'
				        });
					}else{
						this.axios.post('/pdraw/add?uid='+this.uid,{
							amount:Number(this.formValidatetx.amount),
							bankName:this.yhkname,
							bankNo:this.yhkzh,
							accountName:this.username
						}).then(res=>{
							if(res.data.status==200){
								this.$notify({
							        title:"",//
							        message: '提现成功',
							        type: 'success',
							        position: 'bottom-right'
						        });
						        this.canceltx()
						        this.getAcc()//概览可提现余额
							}else{
								this.$notify({
							        title:"",//
							        message: res.data.errorMessage,
							        type: 'error',
							        position: 'bottom-right'
						        });
							}
						})
						
					}
					
				}
			})
		},
		//提现弹框取消
		canceltx(){
			this.txisshow=false
			this.formValidatetx.amount=''
			this.yhkname=''//银行
			this.yhkzh=''//账号
			this.username=''
		},
		//提现银行卡切换
		changeyhkisDefault(item){
			//把所有银行卡设置为不是默认
			this.yhkData.forEach(x=>{
				x.default=false
			})
			//把当前选中设置为默认
			item.default=true
			console.log(item)
			this.yhkname=item.name//银行
			this.yhkzh=item.account//账号
			this.username=item.userName
		},
		//添加银行卡
		//点击添加银行卡
		addyhk(){
			this.yhkisshow=true
		},
		//确认添加银行卡POST /cbank/add 增加用户银行账号
		sureyhk(name){
			this.$refs[name].validate((valid) => {
				if(valid){
					this.axios.post('/cbank/add?uid='+this.uid,{
						name:this.formValidateyhk.name,//银行卡名称
						account:Number(this.formValidateyhk.account),//卡号
						userName:this.formValidateyhk.userName,//姓名
						mobile:Number(this.formValidateyhk.mobile),//手机号
						default:true
					}).then(res=>{
						if(res.data.status==200){
							this.formValidateyhk.name=''
							this.formValidateyhk.account=''//卡号
							this.formValidateyhk.userName=''//姓名
							this.formValidateyhk.mobile=''//手机号
							this.yhkisshow=false
							this.getyhk()//获取银行卡

						}else{
							this.$notify({
						        title:"",//
						        message: res.data.errorMessage,
						        type: 'error',
						        position: 'bottom-right'
					        });
						}
					})
				}
			})
		},
		//添加银行卡取消
		cancelyhk(){
			this.yhkisshow=false
			this.formValidateyhk.account=''//卡号
			this.formValidateyhk.userName=''//姓名
			this.formValidateyhk.mobile=''//手机号
		},
		//获取头部客户欠款GET /finance/parArr 客户欠款
		getpar(){
			this.axios.get('/finance/parArr?uid='+this.uid).then(res=>{
				if(res.data.status==200){
					this.parArrearage=res.data.rows.parArrearage
				}
			})
		},
		//获取头部供应商欠款GET /finance/supArr 供应商欠款
		getsup(){
			this.axios.get('/finance/supArr?uid='+this.uid).then(res=>{
				if(res.data.status==200){
					this.supArrArrearage=res.data.rows.parArrearage
				}
			})
		},
		//获取头部销售总额/销售毛利GET /finance/Sales 销售总额 OR 销售毛利
		getSales(){
			this.axios.get('/finance/Sales?uid='+this.uid).then(res=>{
				if(res.data.status==200){
					if(res.data.rows.totalSales==undefined){
						this.totalSales=0.00
					}else{
						this.totalSales=res.data.rows.totalSales
						
					}
					if(res.data.rows.grossMargin==undefined){
						this.grossMargin=0.00
					}else{
						this.grossMargin=res.data.rows.grossMargin
						
					}
					
				}
			})
		},
		//获取头部采购额GET /finance/Purchase 采购额
		getPurchase(){
			this.axios.get('/finance/Purchase?uid='+this.uid).then(res=>{
				if(res.data.status==200){
					this.totalPo=res.data.rows.ytotalPo
					this.totalPoM=res.data.rows.mtotalPo
					this.comparison=Number(res.data.rows.comparison).toFixed(2)
					console.log(this.comparison)
				}
			})
		},
		getCountDays() {
          	var curDate = new Date();
	        /* 获取当前月份 */
	          var curMonth = curDate.getMonth();
	        /*  生成实际的月份: 由于curMonth会比实际月份小1, 故需加1 */
	        curDate.setMonth(curMonth + 1);
	        /* 将日期设置为0, 这里为什么要这样设置, 我不知道原因, 这是从网上学来的 */
	        curDate.setDate(0);
	        /* 返回当月的天数 */
	        return curDate.getDate();
		},
		 getEvryDay(){
		 	var day=this.getCountDays();
			var dayArry=[];
			for (var k = 1; k <= day; k++) {
			
				dayArry.push(k);

			}
			return dayArry;
		},
	},
	created(){
		this.$nextTick(()=>{
			this.getPurchase()//采购额
			this.getSales()//销售总额/毛利
			this.drawMonth()//月报
			this.getpar()//客户欠款数
			this.getsup()//客户欠款数
			
			
			this.draw()//订单分析
			this.drawxsbj(1)//销售曲线
			this.drawxszz()//利润
			this.drawcg(new Date().getFullYear())//采购成本
			this.drawcgfx(new Date().getFullYear())//采购曲线
		})
	},
	mounted(){
		this.getAcc()//余额
		
		console.log(this.getEvryDay())
		console.log(new Date().getMonth()+1)
	}
}
</script>
<style type="text/css" scoped>
.head-bottom1{
	display:flex;
	flex-wrap: wrap;
	margin: 10px;
}
.head-bottom1-li{
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;
    background: #fff;
    background-clip: border-box;
    border: 1px solid rgba(0,0,0,.125);
    border-radius: .25rem;
   	width:260px;
    margin:10px 10px 0 10px;

}
li{
	list-style: none
}
.car-body{
	padding: 1.25rem;

}
.car-body span{
	color:#666f73;

}
.f-50{
	font-size:35px;
}
.font-weight-100{
	font-weight:100;
}
.loop{
	position:absolute;
	top:10px;
	right:10px;
}
.center-main{
	display:flex;
	margin:10px;
	border-bottom:1px solid #ccc;
	border-top:1px solid #ccc;
}
.center-main-left{
	width:350px;
	border-right:1px solid #ccc;
}
.center-main-right{
	width:100%;
	height:300px;
	border:1px solid red;
}

.echarts{
	width:100%;
	display:flex;
	justify-content: space-around;
	
	
}
.echarts2{
	
	margin-bottom:120px;
}
.zj{
	width:100%;
	display:flex;
	height:40px;
	line-height: 40px;
	justify-content: space-around;
}
.zj-style{
	display:flex;
	justify-content: space-between;
	width: 100%;
	margin:0 10px;
	border:1px solid #ccc;
	border-top:none;
	background:#F5F5F5;
	
}
.zj-style span{
	margin:0 10px;
}
.yhklist1{
	display: flex;
	list-style: none;
	height:30px;
	line-height: 30px;
	margin-bottom:10px;
}
.yhklist{
	display: flex;
	justify-content: space-between;
	list-style: none;
	border:1px solid #e4e4e4;
	height:30px;
	line-height: 30px;
	margin-bottom:10px;
}
</style>